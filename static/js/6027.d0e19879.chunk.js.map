{"version":3,"file":"static/js/6027.d0e19879.chunk.js","mappings":"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","sources":["views/forms/floating-labels/FloatingLabels.js"],"sourcesContent":["import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CFormFloating,\n  CFormSelect,\n  CFormTextarea,\n  CRow,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst FloatingLabels = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Wrap a pair of <code>&lt;CFormInput&gt;</code> and{' '}\n              <code>&lt;CFormLabel&gt;</code> elements in{' '}\n              <code>CFormFloating</code> to enable floating labels with textual\n              form fields. A <code>placeholder</code> is required on each{' '}\n              <code>&lt;CFormInput&gt;</code> as our method of CSS-only floating\n              labels uses the <code>:placeholder-shown</code> pseudo-element.\n              Also note that the <code>&lt;CFormInput&gt;</code> must come first\n              so we can utilize a sibling selector (e.g., <code>~</code>).\n            </p>\n            <DocsExample href=\"forms/floating-labels\">\n              <CFormFloating className=\"mb-3\">\n                <CFormInput\n                  type=\"email\"\n                  id=\"floatingInput\"\n                  placeholder=\"name@example.com\"\n                />\n                <CFormLabel htmlFor=\"floatingInput\">Email address</CFormLabel>\n              </CFormFloating>\n              <CFormFloating>\n                <CFormInput\n                  type=\"password\"\n                  id=\"floatingPassword\"\n                  placeholder=\"Password\"\n                />\n                <CFormLabel htmlFor=\"floatingPassword\">Password</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              When there&#39;s a <code>value</code> already defined,{' '}\n              <code>&lt;CFormLabel&gt;</code>s will automatically adjust to\n              their floated position.\n            </p>\n            <DocsExample href=\"forms/floating-labels\">\n              <CFormFloating>\n                <CFormInput\n                  type=\"email\"\n                  id=\"floatingInputValue\"\n                  placeholder=\"name@example.com\"\n                  defaultValue=\"test@example.com\"\n                />\n                <CFormLabel htmlFor=\"floatingInputValue\">\n                  Input with value\n                </CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Textareas</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By default, <code>&lt;CFormTextarea&gt;</code>s will be the same\n              height as <code>&lt;CFormInput&gt;</code>s.\n            </p>\n            <DocsExample href=\"forms/floating-labels#textareas\">\n              <CFormFloating>\n                <CFormTextarea\n                  id=\"floatingTextarea\"\n                  placeholder=\"Leave a comment here\"\n                ></CFormTextarea>\n                <CFormLabel htmlFor=\"floatingTextarea\">Comments</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              To set a custom height on your <code>&lt;CFormTextarea;&gt;</code>\n              , do not use the <code>rows</code> attribute. Instead, set an\n              explicit <code>height</code> (either inline or via custom CSS).\n            </p>\n            <DocsExample href=\"forms/floating-labels#textareas\">\n              <CFormFloating>\n                <CFormTextarea\n                  placeholder=\"Leave a comment here\"\n                  id=\"floatingTextarea2\"\n                  style={{ height: '100px' }}\n                ></CFormTextarea>\n                <CFormLabel htmlFor=\"floatingTextarea2\">Comments</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Selects</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Other than <code>&lt;CFormInput&gt;</code>, floating labels are\n              only available on <code>&lt;CFormSelect&gt;</code>s. They work in\n              the same way, but unlike <code>&lt;CFormInput&gt;</code>s,\n              they&#39;ll always show the <code>&lt;CFormLabel&gt;</code> in its\n              floated state.{' '}\n              <strong>\n                Selects with <code>size</code> and <code>multiple</code> are not\n                supported.\n              </strong>\n            </p>\n            <DocsExample href=\"forms/floating-labels#selects\">\n              <CFormFloating>\n                <CFormSelect\n                  id=\"floatingSelect\"\n                  aria-label=\"Floating label select example\"\n                >\n                  <option>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n                <CFormLabel htmlFor=\"floatingSelect\">\n                  Works with selects\n                </CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Layout</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              When working with the CoreUI for Bootstrap grid system, be sure to\n              place form elements within column classes.\n            </p>\n            <DocsExample href=\"forms/floating-labels#layout\">\n              <CRow xs={{ gutter: 2 }}>\n                <CCol md>\n                  <CFormFloating>\n                    <CFormInput\n                      type=\"email\"\n                      id=\"floatingInputGrid\"\n                      placeholder=\"name@example.com\"\n                      defaultValue=\"email@example.com\"\n                    />\n                    <CFormLabel htmlFor=\"floatingInputGrid\">\n                      Email address\n                    </CFormLabel>\n                  </CFormFloating>\n                </CCol>\n                <CCol md>\n                  <CFormFloating>\n                    <CFormSelect\n                      id=\"floatingSelectGrid\"\n                      aria-label=\"Floating label select example\"\n                    >\n                      <option>Open this select menu</option>\n                      <option value=\"1\">One</option>\n                      <option value=\"2\">Two</option>\n                      <option value=\"3\">Three</option>\n                    </CFormSelect>\n                    <CFormLabel htmlFor=\"floatingSelectGrid\">\n                      Works with selects\n                    </CFormLabel>\n                  </CFormFloating>\n                </CCol>\n              </CRow>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default FloatingLabels\n"],"names":["xs","className","href","type","id","placeholder","htmlFor","defaultValue","style","height","value","gutter","md"],"sourceRoot":""}