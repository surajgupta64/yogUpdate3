{"version":3,"file":"static/js/5735.e810a95c.chunk.js","mappings":"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","sources":["views/base/list-groups/ListGroups.js"],"sourcesContent":["import React from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormCheck,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst ListGroups = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Basic example</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              The default list group is an unordered list with items and the\n              proper CSS classes. Build upon it with the options that follow, or\n              with your CSS as required.\n            </p>\n            <DocsExample href=\"components/list-group\">\n              <CListGroup>\n                <CListGroupItem>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Active items</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>active</code> boolean property to a{' '}\n              <code>&lt;CListGroupItem&gt;</code> to show the current active\n              selection.\n            </p>\n            <DocsExample href=\"components/list-group/#active-items\">\n              <CListGroup>\n                <CListGroupItem active>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Disabled items</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>disabled</code> boolean property to a{' '}\n              <code>&lt;CListGroupItem&gt;</code> to make it appear disabled.\n            </p>\n            <DocsExample href=\"components/list-group/#disabled-items\">\n              <CListGroup>\n                <CListGroupItem disabled>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Links and buttons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use <code>&lt;a&gt;</code>s or <code>&lt;button&gt;</code>s to\n              create <em>actionable</em> list group items with hover, disabled,\n              and active states by adding{' '}\n              <code>component=&#34;a|button&#34;</code>. We separate these\n              pseudo-classes to ensure list groups made of non-interactive\n              elements (like <code>&lt;li&gt;</code>s or{' '}\n              <code>&lt;div&gt;</code>\n              s) don&#39;tprovide a click or tap affordance.\n            </p>\n            <DocsExample href=\"components/list-group/#links-and-buttons\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\" active>\n                  Cras justo odio\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Dapibus ac facilisis in\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Morbi leo risus\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Porta ac consectetur ac\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\" disabled>\n                  Vestibulum at eros\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Flush</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>flush</code> boolean property to remove some borders and\n              rounded corners to render list group items edge-to-edge in a\n              parent container (e.g., cards).\n            </p>\n            <DocsExample href=\"components/list-group/#flush\">\n              <CListGroup flush>\n                <CListGroupItem>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Horizontal</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>layout=&#34;horizontal&#34;</code> to change the layout\n              of list group items from vertical to horizontal across all\n              breakpoints. Alternatively, choose a responsive variant{' '}\n              <code>\n                .layout=&#34;horizontal-&#123;sm | md | lg | xl | xxl&#125;&#34;\n              </code>{' '}\n              to make a list group horizontal starting at that breakpoint&#39;s{' '}\n              <code>min-width</code>. Currently{' '}\n              <strong>\n                horizontal list groups cannot be combined with flush list\n                groups.\n              </strong>\n            </p>\n            <DocsExample href=\"components/list-group/#flush\">\n              {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map(\n                (breakpoint, index) => (\n                  <CListGroup\n                    className=\"mb-2\"\n                    layout={`horizontal${breakpoint}`}\n                    key={index}\n                  >\n                    <CListGroupItem>Cras justo odio</CListGroupItem>\n                    <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                    <CListGroupItem>Morbi leo risus</CListGroupItem>\n                  </CListGroup>\n                )\n              )}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Contextual classes</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use contextual classes to style list items with a stateful\n              background and color.\n            </p>\n            <DocsExample href=\"components/list-group/#contextual-classes\">\n              <CListGroup>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                {[\n                  'primary',\n                  'secondary',\n                  'success',\n                  'danger',\n                  'warning',\n                  'info',\n                  'light',\n                  'dark',\n                ].map((color, index) => (\n                  <CListGroupItem color={color} key={index}>\n                    A simple {color} list group item\n                  </CListGroupItem>\n                ))}\n              </CListGroup>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              Contextual classes also work with <code>&lt;a&gt;</code>s or{' '}\n              <code>&lt;button&gt;</code>s. Note the addition of the hover\n              styles here not present in the previous example. Also supported is\n              the <code>active</code> state; apply it to indicate an active\n              selection on a contextual list group item.\n            </p>\n            <DocsExample href=\"components/list-group/#contextual-classes\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Dapibus ac facilisis in\n                </CListGroupItem>\n                {[\n                  'primary',\n                  'secondary',\n                  'success',\n                  'danger',\n                  'warning',\n                  'info',\n                  'light',\n                  'dark',\n                ].map((color, index) => (\n                  <CListGroupItem\n                    component=\"a\"\n                    href=\"#\"\n                    color={color}\n                    key={index}\n                  >\n                    A simple {color} list group item\n                  </CListGroupItem>\n                ))}\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>With badges</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add badges to any list group item to show unread counts, activity,\n              and more.\n            </p>\n            <DocsExample href=\"components/list-group/#with-badges\">\n              <CListGroup>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Cras justo odio\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    14\n                  </CBadge>\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Dapibus ac facilisis in\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    2\n                  </CBadge>\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Morbi leo risus\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\n                    1\n                  </CBadge>\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add nearly any HTML within, even for linked list groups like the\n              one below, with the help of{' '}\n              <a href=\"https://coreui.io/docs/utilities/flex/\">\n                flexbox utilities\n              </a>\n              .\n            </p>\n            <DocsExample href=\"components/list-group/#custom-content\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\" active>\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small>3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas\n                    sed diam eget risus varius blandit.\n                  </p>\n                  <small>Donec id elit non mi porta.</small>\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas\n                    sed diam eget risus varius blandit.\n                  </p>\n                  <small className=\"text-medium-emphasis\">\n                    Donec id elit non mi porta.\n                  </small>\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas\n                    sed diam eget risus varius blandit.\n                  </p>\n                  <small className=\"text-medium-emphasis\">\n                    Donec id elit non mi porta.\n                  </small>\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong>{' '}\n            <small>Checkboxes and radios</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Place CoreUI&#39;s checkboxes and radios within list group items\n              and customize as needed.\n            </p>\n            <DocsExample href=\"components/list-group/#checkboxes-and-radios\">\n              <CListGroup>\n                <CListGroupItem>\n                  <CFormCheck label=\"Cras justo odio\" />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Dapibus ac facilisis in\" defaultChecked />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Morbi leo risus\" defaultChecked />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"orta ac consectetur ac\" />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Vestibulum at eros\" />\n                </CListGroupItem>\n              </CListGroup>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default ListGroups\n"],"names":["xs","className","href","active","disabled","component","flush","map","breakpoint","index","layout","color","shape","label","defaultChecked"],"sourceRoot":""}