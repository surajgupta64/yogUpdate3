{"version":3,"file":"static/js/3765.2243f868.chunk.js","mappings":"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","sources":["firebase.js","views/Master/marketing/GalleryMaster.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDJvzaEbE1dAg22tfnpdk0TnO92m8I1kug\",\r\n    authDomain: \"uploadingfile-cb68e.firebaseapp.com\",\r\n    projectId: \"uploadingfile-cb68e\",\r\n    storageBucket: \"uploadingfile-cb68e.appspot.com\",\r\n    messagingSenderId: \"877657240307\",\r\n    appId: \"1:877657240307:web:1dfc6f15a2bc1ccaccbd86\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app)","import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport { getDownloadURL, listAll, ref, uploadBytes } from \"firebase/storage\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { storage } from \"src/firebase\";\r\nimport { v4 } from \"uuid\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst GalleryMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [galleryType, setGalleryType] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const [url1, setUrl1] = useState('')\r\n    const [imageUrls, setImageUrls] = useState([]);\r\n    const [progress, setProcess] = useState()\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0)\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    const imagesListRef = ref(storage, \"galleryMaster/\");\r\n    useEffect(() => {\r\n        getGallery()\r\n        listAll(imagesListRef).then((response) => {\r\n            response.items.forEach((item) => {\r\n                getDownloadURL(item).then((url) => {\r\n                    setImageUrls((prev) => [...prev, url]);\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n    function getGallery() {\r\n\r\n        axios.get(`${url}/galleryMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createGallery() {\r\n        if (galleryType === 'Center Image' || galleryType === 'Trainer Image') {\r\n            const imageRef = ref(storage, `images/${image.name + v4()}`);\r\n            uploadBytes(imageRef, image).then((snapshot) => {\r\n                getDownloadURL(snapshot.ref).then((url) => {\r\n                    setImageUrl(url)\r\n                    console.log(url);\r\n                });\r\n            });\r\n            if (imageUrl != null) {\r\n\r\n                const data = {\r\n                    username: username,\r\n                    Name: name,\r\n                    galleryType,\r\n                    Description: description,\r\n                    image: imageUrl,\r\n                }\r\n                axios.post(`${url}/galleryMaster/create`, data, { headers })\r\n                    .then((resp) => {\r\n                        console.log(resp.data)\r\n                        alert('Successfully Added')\r\n                        getGallery()\r\n                        setAction1(false)\r\n                        setName('')\r\n                        setImageUrl('')\r\n                        setDescription('')\r\n                    })\r\n                    .catch((error) => console.log(error))\r\n            }\r\n\r\n        } else {\r\n\r\n            const data = {\r\n                username: username,\r\n                Name: name,\r\n                galleryType,\r\n                Description: description,\r\n                url: url1,\r\n            }\r\n            axios.post(`${url}/galleryMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getGallery()\r\n                    setAction1(false)\r\n                    setName('')\r\n                    setDescription('')\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n\r\n    }\r\n    const handleImage = (e) => {\r\n        if (e.target.files[0]) {\r\n            const image1 = e.target.files[0];\r\n            setImage(image1)\r\n        }\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/galleryMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getGallery()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Gallery Master</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm className=\"mb-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div></div>\r\n                        <div>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CButton className=\"ms-1 mt-2\" onClick={() => setAction1(!action1)}>{action1 ? 'close' : 'Add Gallery'}</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    </div>\r\n                    {action1 &&\r\n                        <div>\r\n                            <CRow className='mt-3'>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormSelect\r\n                                        label=\"Gallery\"\r\n                                        value={galleryType}\r\n                                        onChange={(e) => setGalleryType(e.target.value)}\r\n                                    >\r\n                                        <option >Select</option>\r\n                                        <option >Instagram Url</option>\r\n                                        <option >Facebook Url</option>\r\n                                        <option >Youtube Url</option>\r\n                                        <option >Trainer Image</option>\r\n                                        <option >Center Image</option>\r\n                                    </CFormSelect>\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Name\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                        placeholder=\"Enter Name\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={12} md={12} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        label=\"Description\"\r\n                                        placeholder=\"Enter Description\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={12} md={12} sm={12}>\r\n                                    {(galleryType === 'Center Image' || galleryType === 'Trainer Image') &&\r\n                                        <CFormInput\r\n                                            className=\"mb-1 mr-3\"\r\n                                            type=\"file\"\r\n                                            onChange={handleImage}\r\n                                            accept=\"image/*\"\r\n                                        />\r\n                                    }\r\n                                    {(galleryType !== 'Center Image' && galleryType !== 'Trainer Image') &&\r\n                                        < CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"url\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            value={url1}\r\n                                            onChange={(e) => setUrl1(e.target.value)}\r\n                                            label=\"Url\"\r\n                                            placeholder=\"Enter Url\"\r\n                                        />\r\n                                    }\r\n                                </CCol>\r\n                                <CCol className=\"mt-2\" lg={6} md={6} sm={12}>\r\n                                    <CButton className=\"mt-2\" onClick={() => createGallery()}>Save</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    }\r\n                </CForm>\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>Name</CTableHeaderCell>\r\n                            <CTableHeaderCell>Gallery Type</CTableHeaderCell>\r\n                            <CTableHeaderCell>Description</CTableHeaderCell>\r\n                            <CTableHeaderCell>Url</CTableHeaderCell>\r\n                            <CTableHeaderCell>Image</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.slice(paging * 10, paging * 10 + 10).filter((list) => list.username === username).map((item, index) => (\r\n                            item.username === username && (\r\n                                <CTableRow key={index}>\r\n                                    <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(item.createdAt).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                    <CTableDataCell className=\"text-center\">{item.Name}</CTableDataCell>\r\n                                    <CTableDataCell>{item.galleryType}</CTableDataCell>\r\n                                    <CTableDataCell>{item.Description}</CTableDataCell>\r\n                                    <CTableDataCell><a href={item.url} target='_blank'>{item.url}</a></CTableDataCell>\r\n                                    <CTableDataCell>{item.image != null &&\r\n                                        <img width='100px' src={item.image} />\r\n                                    }\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell><MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteData(item._id)} size='20px' /></CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n            <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                </CPaginationItem>\r\n                <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                    <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                    : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                }\r\n            </CPagination>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default GalleryMaster;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","url","useState","action1","setAction1","galleryType","setGalleryType","name","setName","description","setDescription","image","setImage","imageUrl","setImageUrl","url1","setUrl1","setImageUrls","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","headers","imagesListRef","ref","getGallery","axios","then","res","console","log","data","reverse","catch","error","useEffect","listAll","response","items","forEach","item","getDownloadURL","prev","className","style","backgroundColor","color","onClick","lg","md","sm","label","value","onChange","e","target","type","id","placeholder","files","image1","accept","imageRef","v4","uploadBytes","snapshot","Name","Description","resp","alert","createGallery","align","bordered","borderColor","hover","responsive","slice","filter","list","map","index","moment","createdAt","format","href","width","src","cursor","markerStart","_id","confirm","fetch","method","result","json","warn","size","disabled","active","length","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}