{"version":3,"file":"static/js/1376.85c4b01f.chunk.js","mappings":"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","sources":["firebase.js","views/forms/Appointment.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDJvzaEbE1dAg22tfnpdk0TnO92m8I1kug\",\r\n    authDomain: \"uploadingfile-cb68e.firebaseapp.com\",\r\n    projectId: \"uploadingfile-cb68e\",\r\n    storageBucket: \"uploadingfile-cb68e.appspot.com\",\r\n    messagingSenderId: \"877657240307\",\r\n    appId: \"1:877657240307:web:1dfc6f15a2bc1ccaccbd86\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app)","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from '@coreui/react'\r\nimport axios from 'axios'\r\nimport { ref } from 'firebase/storage'\r\nimport { storage } from 'src/firebase'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { MdDelete } from 'react-icons/md'\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst Appointment = () => {\r\n    const [appointment, setAppointment] = useState(false)\r\n    const [action1, setAction1] = useState(false)\r\n\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0)\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    const imagesListRef = ref(storage, \"DocumentClient/\");\r\n    useEffect(() => {\r\n        getAppointment()\r\n        getStaff()\r\n    }, []);\r\n\r\n    const [staff, setStaff] = useState([])\r\n    function getStaff() {\r\n        axios.get(`${url2}/employeeForm/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setStaff(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function getAppointment() {\r\n        axios.get(`${url}/AppointmentClient/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const [AppointmentDate, setAppointmentDate] = useState('')\r\n    const [AppointmentTime, setAppointmentTime] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [StaffName, setStaffName] = useState('')\r\n\r\n    function createGallery() {\r\n        const data = {\r\n            userId: id,\r\n            ClientName: name,\r\n            ClientNumber: contact,\r\n            AppointmentId: (\"AP\" + username + result1.length),\r\n            AppointmentDate: AppointmentDate,\r\n            AppointmentTime: AppointmentTime,\r\n            StaffName: StaffName,\r\n        }\r\n        axios.post(`${url}/AppointmentClient/create`, data, { headers })\r\n            .then((resp) => {\r\n                console.log(resp.data)\r\n                alert('Successfully Added')\r\n                getAppointment()\r\n                setAction1(false)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    const navi = useNavigate()\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/AppointmentClient/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getAppointment()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className='mb-3 border-top-success border-top-3'>\r\n                    <CCardHeader>\r\n                        <strong className=\"mt-2\">All ClientAppointment</strong>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CRow className='d-flex justify-content-center mb-2'>\r\n                            <CCol lg={5} sm={12} className='mb-2'>\r\n                                <CInputGroup style={{ width: \"500px\" }}>\r\n                                    <CInputGroupText\r\n                                        component=\"label\"\r\n                                        htmlFor=\"inputGroupSelect01\"\r\n                                    >\r\n                                        Form\r\n                                    </CInputGroupText>\r\n                                    <CFormInput\r\n                                        placeholder=\"Search\"\r\n                                        type='date'\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"button-addon2\"\r\n                                    />\r\n                                    <CInputGroupText\r\n                                        component=\"label\"\r\n                                        htmlFor=\"inputGroupSelect01\"\r\n                                    >\r\n                                        To\r\n                                    </CInputGroupText>\r\n                                    <CFormInput\r\n                                        placeholder=\"Search\"\r\n                                        type='date'\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"button-addon2\"\r\n                                    />\r\n                                    <CButton type=\"button\" color=\"primary\">\r\n                                        Search\r\n                                    </CButton>\r\n                                </CInputGroup>\r\n                            </CCol>\r\n                            <CCol>\r\n                                <CButton className='float-end' onClick={() => setAppointment(!appointment)} >{appointment ? 'Close' : 'Add Appointment'}</CButton>\r\n                            </CCol>\r\n                        </CRow>\r\n                        {appointment &&\r\n                            <div>\r\n                                <CRow className='mt-3'>\r\n\r\n                                    <CCol lg={6} md={6} sm={12}>\r\n                                        <CFormInput\r\n                                            className=\"mb-1 mr-3\"\r\n                                            type=\"text\"\r\n                                            label=\"Client Name\"\r\n                                            placeholder='Enter Client Name'\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </CCol>\r\n\r\n                                    <CCol lg={6} md={6} sm={12}>\r\n                                        <CFormInput\r\n                                            className=\"mb-1 mr-3\"\r\n                                            type=\"number\"\r\n                                            label=\"Client Number\"\r\n                                            placeholder='Enter Client Number'\r\n                                            value={contact}\r\n                                            onChange={(e) => setContact(e.target.value)}\r\n                                        />\r\n                                    </CCol>\r\n                                    <CCol lg={4} md={4} sm={12}>\r\n                                        <CFormSelect\r\n                                            label=\"Staff Name\"\r\n                                            value={StaffName}\r\n                                            onChange={(e) => setStaffName(e.target.value)}\r\n                                        >\r\n                                            <option >Select</option>\r\n                                            {staff.filter((list) => list.username === username && list.selected === 'Select').map((item, index) => (\r\n                                                item.username === username && (\r\n                                                    <option key={index}>{item.FullName}</option>\r\n                                                )\r\n                                            ))}\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol lg={4} md={4} sm={12}>\r\n                                        <CFormInput\r\n                                            className=\"mb-1 mr-3\"\r\n                                            type=\"date\"\r\n                                            label=\"Appointment Date\"\r\n                                            value={AppointmentDate}\r\n                                            onChange={(e) => setAppointmentDate(e.target.value)}\r\n                                        />\r\n                                    </CCol>\r\n                                    <CCol lg={4} md={4} sm={12}>\r\n                                        <CFormInput\r\n                                            className=\"mb-1 mr-3\"\r\n                                            type=\"time\"\r\n                                            label=\"Appointment Time\"\r\n                                            value={AppointmentTime}\r\n                                            onChange={(e) => setAppointmentTime(e.target.value)}\r\n                                        />\r\n                                    </CCol>\r\n                                    <CCol className=\"mt-2\" lg={6} md={6} sm={12}>\r\n                                        <CButton className=\"mt-2\" onClick={() => createGallery()}>Save</CButton>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </div>\r\n                        }\r\n\r\n                        <CTable className='mt-2' bordered style={{ borderColor: \"#106103\" }} responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#106103\", color: \"white\" }}>\r\n                                <CTableRow>\r\n                                    <CTableHeaderCell scope=\"col\">Sr No</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Booking Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Staff</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Appointment Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Appointment Time</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Client Name</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Client Number</CTableHeaderCell>\r\n                                    <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                {result1.map((item, index) => (\r\n                                    <CTableRow key={index}>\r\n                                        <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(item.createdAt).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell className=\"text-center\">{item.StaffName}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(item.AppointmentDate).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.AppointmentTime}</CTableDataCell>\r\n                                        <CTableDataCell>{item.ClientName}</CTableDataCell>\r\n                                        <CTableDataCell>{item.ClientNumber}</CTableDataCell>\r\n                                        <CTableDataCell><MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteData(item._id)} size='20px' /></CTableDataCell>\r\n                                    </CTableRow>\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Appointment\r\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","url","url2","useState","appointment","setAppointment","setAction1","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","headers","ref","useEffect","getAppointment","axios","then","res","setStaff","data","catch","error","console","staff","log","reverse","AppointmentDate","setAppointmentDate","AppointmentTime","setAppointmentTime","name","setName","contact","setContact","StaffName","setStaffName","useNavigate","lg","sm","className","style","width","component","htmlFor","placeholder","type","color","onClick","md","label","value","onChange","e","target","filter","list","selected","map","item","index","FullName","userId","id","ClientName","ClientNumber","AppointmentId","length","resp","alert","createGallery","bordered","borderColor","responsive","backgroundColor","scope","moment","createdAt","format","cursor","markerStart","confirm","fetch","method","result","json","warn","deleteData","_id","size"],"sourceRoot":""}