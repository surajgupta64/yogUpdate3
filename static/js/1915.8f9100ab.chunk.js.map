{"version":3,"file":"static/js/1915.8f9100ab.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CFormSelect,\n  CInputGroup,\n  CProgress,\n  CProgressBar,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartBar, CChartLine, CChartPie } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilUser,\n  cilUserFemale,\n  cilPeople,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nconst url = 'https://yog-seven.vercel.app'\n\nconst Dashboard = () => {\n  const [result, setResult] = useState()\n  const [callReport, setCallReport] = useState()\n  const navigate = useNavigate()\n  const user = JSON.parse(localStorage.getItem('user-info'))\n  const token = user?.token;\n  const username = user?.user?.username;\n\n  useEffect(() => {\n    if (user == null) {\n      navigate('/login')\n    }\n    else if (user.user.username == null || user.user.username == undefined) {\n      alert('Incorrect Details')\n      localStorage.clear()\n    } else {\n      getEnquiry()\n      callFun()\n    }\n  }, [])\n\n  function getEnquiry() {\n    axios.get(`${url}/enquiryForm/all`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n      .then((res) => {\n        setResult(res.data.filter((list) => list.username === username))\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n\n  }\n  function callFun() {\n    axios.get(`${url}/prospect/all`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n      .then((res) => {\n        console.log(res.data)\n        callReport(res.data.filter((list) => list.username === username).reverse())\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n  const [active, setActive] = useState('Today')\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    {\n      title: 'Pageviews',\n      value: '78.706 Views',\n      percent: 60,\n      color: 'warning',\n    },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    {\n      title: 'Bounce Rate',\n      value: 'Average Rate',\n      percent: 40.15,\n      color: 'primary',\n    },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CInputGroup style={{ width: '250px' }} className=\"left mb-2\">\n            <CFormSelect id=\"inputGroupSelect01\" value={active}>\n              <option onClick={() => setAction('Today')}>Today</option>\n              <option onClick={() => setAction('Last 7 day')}>Last 7 day</option>\n              <option value=\"2\">1 Month</option>\n              <option value='4'>Year</option>\n              <option>Custom Date</option>\n            </CFormSelect>\n\n            <CButton type=\"button\" color=\"primary\" id=\"button-addon2\">\n              Go\n            </CButton>\n          </CInputGroup>\n          <CRow>\n            <CCol lg={3} sm={6}>\n              <CCard className=\"mb-4\">\n                <CCardHeader>All Enquiries</CCardHeader>\n                <CCardBody>\n                  <CChartPie\n                    data={{\n                      labels: ['ENQUIRE', 'TRIALS', 'APPOINTMENT', 'CALLS', 'PROSPECT', 'COLD '],\n                      datasets: [\n                        {\n                          data: [result?.length,\n                          result?.filter((list) => list.appointmentfor === 'Trial Session').length,\n                            100,\n                            60,\n                            80,\n                          result?.filter((list) => list.CallStatus === 'Cold').length,],\n                          backgroundColor: ['red', 'yellow', 'green', 'orange', 'blue', 'skyblue'],\n                          hoverBackgroundColor: [\n                            '#E74C3C',\n                            '#F4D03F',\n                            '#2ECC71',\n                            '#F8C471',\n                            'skyblue',\n                          ],\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol lg={3} sm={6}>\n              <CCard className=\"mb-4\">\n                <CCardHeader>Total Sales</CCardHeader>\n                <CCardBody>\n                  <CChartPie\n                    data={{\n                      labels: [\n                        'TOTAL SALES',\n                        'PAYMENT RECEIVED',\n                        'BALANCE PAYMENT',\n                      ],\n                      datasets: [\n                        {\n                          data: [300, 50, 100],\n                          backgroundColor: ['darkblue', 'green', 'red'],\n                          hoverBackgroundColor: [\n                            'blue',\n                            'lightgreen',\n                            '#F1948A',\n                          ],\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol lg={3} sm={6}>\n              <CCard className=\"mb-4\">\n                <CCardHeader>Total Clients</CCardHeader>\n                <CCardBody>\n                  <CChartPie\n                    data={{\n                      labels: [\n                        'ALL CLIENT',\n                        'ACTIVE',\n                        'NEW',\n                        'RENEWAL',\n                        'RENEWED',\n                        'LEFT',\n                      ],\n                      datasets: [\n                        {\n                          data: [30, 40, 50, 100, 80, 50],\n                          backgroundColor: ['red', 'pink', 'green', 'yellow', 'orange', 'blue',],\n                          hoverBackgroundColor: [\n                            '#FF6384',\n                            'darkpick',\n                            '#52BE80',\n                            '#F7DC6F',\n                            '#F8C471',\n                            '#5499C7',\n                          ],\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol lg={3} sm={6}>\n\n              <CCard className=\"mb-4\">\n                <CCardHeader>Total Services</CCardHeader>\n                <CCardBody>\n                  <CChartPie\n                    data={{\n                      labels: ['YOGA', 'ZOOMBA', 'PT', 'TTC', 'DIET'],\n                      datasets: [\n                        {\n                          data: [30, 50, 100, 80, 50],\n                          backgroundColor: ['orange', 'red', 'yellow', 'blue', 'green',],\n                          hoverBackgroundColor: [\n                            '#F5B041',\n                            '#EC7063',\n                            '#F7DC6F',\n                            '#5499C7',\n                            '#52BE80',\n                          ],\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n\n      <WidgetsDropdown />\n      <CRow>\n        <CCol lg={6} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CRow>\n                <CCol sm={5} className='mb-2'>\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\n                    Income\n                  </h4>\n                  <div className=\"small text-medium-emphasis\">\n                    January - July 2021\n                  </div>\n                </CCol>\n                <CCol sm={7} className=\"d-none d-md-block\">\n                  <CButton color=\"primary\" className=\"float-end\">\n                    <CIcon icon={cilCloudDownload} />\n                  </CButton>\n                  <CButtonGroup className=\"float-end me-3\">\n                    {['Day', 'Month', 'Year'].map((value) => (\n                      <CButton\n                        color=\"outline-secondary\"\n                        key={value}\n                        className=\"mx-0\"\n                        active={value === 'Month'}\n                      >\n                        {value}\n                      </CButton>\n                    ))}\n                  </CButtonGroup>\n                </CCol>\n              </CRow>\n              <CChartBar\n                data={{\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                    'August',\n                    'Sep',\n                  ],\n                  value: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                    'August',\n                    'Sep',\n                  ],\n                  datasets: [\n                    {\n                      label: 'Monthly Sales',\n                      backgroundColor: 'darkgreen',\n                      data: [40, 20, 12, 39, 10, 40, 39, 80, 40, 100],\n                    },\n                  ],\n                }}\n                labels=\"months\"\n                value=\"value\"\n              />\n              <CCard style={{ marginRight: '10px', marginLeft: '40px', backgroundColor: 'darkgreen', color: 'white', paddingLeft: '10px', paddingRight: '10px' }}>\n                <div className='d-flex justify-content-between'>\n                  <label>40</label>\n                  <label>20</label>\n                  <label>12</label>\n                  <label>39</label>\n                  <label>10</label>\n                  <label>40</label>\n                  <label>39</label>\n                  <label>80</label>\n                  <label>40</label>\n                </div>\n              </CCard>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol lg={6} sm={12}>\n          <CCard className=\"mb-4\">\n\n            <CCardBody>\n\n              <CRow >\n                <CCol sm={4}>\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\n                    Attendance\n                  </h4>\n                  <div className=\"small text-medium-emphasis mb-3\">\n                    Weekly\n                  </div>\n                </CCol>\n                <CCol sm={4}>\n                  <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                    <div className=\"text-medium-emphasis small\">\n                      Attented Clients\n                    </div>\n                    <div className=\"fs-5 fw-semibold\">9,123</div>\n                  </div>\n                </CCol>\n                <CCol sm={4}>\n                  <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                    <div className=\"text-medium-emphasis small\">\n                      Total Active Clients\n                    </div>\n                    <div className=\"fs-5 fw-semibold\">22,643</div>\n                  </div>\n                </CCol>\n              </CRow>\n\n              <CRow>\n                <CCol xs={12} md={12} xl={12}>\n\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-3\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">\n                          {item.title}\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress >\n                          <CProgressBar color=\"success\" value={item.value1} />\n                          <CProgressBar color=\"info\" value={item.value2} />\n                        </CProgress>\n                      </div>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value1}\n                          <span className=\"text-medium-emphasis small\">\n                            ({item.percent}%)\n                          </span>\n                        </span>/\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value2}\n                          <span className=\"text-medium-emphasis small\">\n                            ({item.percent}%)\n                          </span>\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol lg={6} sm={12}>\n          <CCard className=\"mb-2\">\n            <CCardBody>\n              <CRow>\n                <CCol sm={5}>\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\n                    Traffic\n                  </h4>\n                  <div className=\"small text-medium-emphasis\">\n                    January - July 2021\n                  </div>\n                </CCol>\n                <CCol sm={7} className=\"d-none d-md-block\">\n                  <CButton color=\"primary\" className=\"float-end\">\n                    <CIcon icon={cilCloudDownload} />\n                  </CButton>\n                  <CButtonGroup className=\"float-end me-3\">\n                    {['Day', 'Month', 'Year'].map((value) => (\n                      <CButton\n                        color=\"outline-secondary\"\n                        key={value}\n                        className=\"mx-0\"\n                        active={value === 'Month'}\n                      >\n                        {value}\n                      </CButton>\n                    ))}\n                  </CButtonGroup>\n                </CCol>\n              </CRow>\n              <CChartLine\n                style={{ height: '270px', marginTop: '20px' }}\n                data={{\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  datasets: [\n                    {\n                      label: 'My First dataset',\n                      backgroundColor: hexToRgba(getStyle('--cui-success'), 50),\n                      borderColor: getStyle('--cui-info'),\n                      pointHoverBackgroundColor: getStyle('--cui-info'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                      fill: true,\n                    },\n                    {\n                      label: 'My Second dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-red'),\n                      pointHoverBackgroundColor: getStyle('--cui-success'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                    },\n                    {\n                      label: 'My Third dataset',\n                      backgroundColor: 'success',\n                      borderColor: getStyle('--cui-danger'),\n                      pointHoverBackgroundColor: getStyle('--cui-danger'),\n                      borderWidth: 1,\n                      borderDash: [8, 5],\n                      data: [65, 65, 65, 65, 65, 65, 65],\n                    },\n                  ],\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      grid: {\n                        drawOnChartArea: false,\n                      },\n                    },\n                    y: {\n                      ticks: {\n                        beginAtZero: true,\n                        maxTicksLimit: 5,\n                        stepSize: Math.ceil(250 / 5),\n                        max: 250,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 0,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                      hoverBorderWidth: 3,\n                    },\n                  },\n                }}\n              />\n            </CCardBody>\n            <CCardFooter>\n              <CRow xs={{ cols: 2 }} md={{ cols: 5 }} className=\"text-center\">\n                {progressExample.map((item, index) => (\n                  <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                    <div className=\"text-medium-emphasis\">{item.title}</div>\n                    <strong style={{ fontSize: '10px' }}>\n                      {item.value} ({item.percent}%)\n                    </strong>\n                    <CProgress\n                      thin\n                      className=\"mt-2\"\n                      color={item.color}\n                      value={item.percent}\n                    />\n                  </CCol>\n                ))}\n              </CRow>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol lg={6} sm={12}>\n          <CCard className=\"mb-4\">\n\n            <CCardBody>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Social Media\n              </h4>\n              <div className=\"small text-medium-emphasis mb-3\">\n                Traffic\n              </div>\n              <CRow>\n                <CCol sm={6}>\n                  <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                    <div className=\"text-medium-emphasis small\">\n                      Pageviews\n                    </div>\n                    <div className=\"fs-5 fw-semibold\">78,623</div>\n                  </div>\n                </CCol>\n                <CCol sm={6}>\n                  <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                    <div className=\"text-medium-emphasis small\">\n                      Organic\n                    </div>\n                    <div className=\"fs-5 fw-semibold\">49,123</div>\n                  </div>\n                </CCol>\n              </CRow>\n\n              <hr className=\"mt-0\" />\n\n              {progressGroupExample2.map((item, index) => (\n                <div className=\"progress-group mb-2\" key={index}>\n                  <div className=\"progress-group-header\">\n                    <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                    <span>{item.title}</span>\n                    <span className=\"ms-auto fw-semibold\">\n                      {item.value}%\n                    </span>\n                  </div>\n                  <div className=\"progress-group-bars\">\n                    <CProgress thin color=\"warning\" value={item.value} />\n                  </div>\n                </div>\n              ))}\n\n              <div className=\"mb-4\"></div>\n\n              {progressGroupExample3.map((item, index) => (\n                <div className=\"progress-group\" key={index}>\n                  <div className=\"progress-group-header\">\n                    <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                    <span>{item.title}</span>\n                    <span className=\"ms-auto fw-semibold\">\n                      {item.value}{' '}\n                      <span className=\"text-medium-emphasis small\">\n                        ({item.percent}%)\n                      </span>\n                    </span>\n                  </div>\n                  <div className=\"progress-group-bars\">\n                    <CProgress thin color=\"success\" value={item.percent} />\n                  </div>\n                </div>\n              ))}\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n      </CRow>\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol >\n          <CCard className=\"mb-4\">\n            <CCardHeader>Yog Power Branch</CCardHeader>\n            <CCardBody>\n              <CTable align=\"middle\" bordered style={{ borderColor: \"#106103\" }} hover responsive>\n                <CTableHead style={{ backgroundColor: \"#106103\", color: \"white\" }} >\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Center Name</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Location\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Proformance</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Royalty Percent\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Details</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar\n                          size=\"md\"\n                          src={item.avatar.src}\n                          status={item.avatar.status}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> |\n                          Registered: {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon\n                          size=\"xl\"\n                          icon={item.country.flag}\n                          title={item.country.name}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell>\n\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>Total Target :100000</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">\n                              Complated : 60000\n                            </small>\n                          </div>\n                        </div>\n\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">\n                              {item.usage.period}\n                            </small>\n                          </div>\n                        </div>\n                        <CProgress\n                          thin\n                          color={item.usage.color}\n                          value={item.usage.value}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>\n                          <strong>12%</strong>\n                        </div>\n                        <div>\n                          <small className=\"text-medium-emphasis\">\n                            72000 Received\n                          </small>\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <CButton color='success'>view</CButton>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibFacebook,\n  cibGoogle,\n  cibInstagram,\n  cibLinkedin,\n  cibTwitter,\n  cilCalendar,\n} from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={\n            <CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />\n          }\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={\n            <CIcon icon={cibGoogle} height={52} className=\"my-4 text-white\" />\n          }\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#F14151',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={\n            <CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />\n          }\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={\n            <CIcon icon={cibInstagram} height={52} className=\"my-4 text-white\" />\n          }\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n\n          style={{\n            '--cui-card-cap-bg': '#AD2789',\n          }}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\nimport { FaEye } from 'react-icons/fa'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          style={{ backgroundColor: 'red', color: \"white\" }}\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Members\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle\n                color=\"transparent\"\n                caret={false}\n                className=\"p-0\"\n              >\n                <FaEye\n                  size='25px'\n                  className=\"text-high-emphasis-inverse\" />\n\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-red'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Collection\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle\n                color=\"transparent\"\n                caret={false}\n                className=\"p-0\"\n              >\n                <CIcon\n                  icon={cilOptions}\n                  className=\"text-high-emphasis-inverse\"\n                />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Expense\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle\n                color=\"transparent\"\n                caret={false}\n                className=\"p-0\"\n              >\n                <CIcon\n                  icon={cilOptions}\n                  className=\"text-high-emphasis-inverse\"\n                />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"success\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Profit\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle\n                color=\"transparent\"\n                caret={false}\n                className=\"p-0\"\n              >\n                <CIcon\n                  icon={cilOptions}\n                  className=\"text-high-emphasis-inverse\"\n                />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84,\n                      67, 82,\n                    ],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["url","useState","result","setResult","callReport","navigate","useNavigate","user","JSON","parse","localStorage","getItem","token","username","useEffect","undefined","alert","clear","axios","headers","then","res","data","filter","list","catch","error","console","log","reverse","random","min","max","Math","floor","active","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","status","name","new","registered","country","flag","cifUs","usage","period","color","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","className","style","width","id","onClick","setAction","type","lg","sm","labels","datasets","length","appointmentfor","CallStatus","backgroundColor","hoverBackgroundColor","cilCloudDownload","map","label","marginRight","marginLeft","paddingLeft","paddingRight","xs","md","xl","value1","value2","item","index","height","marginTop","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","cols","fontSize","thin","size","withCharts","align","bordered","hover","responsive","cilPeople","chartOptions","chart","values","cibInstagram","cilArrowBottom","action","alignment","caret","disabled","pointBackgroundColor","drawBorder","cilArrowTop","cilOptions","barPercentage","drawTicks"],"sourceRoot":""}