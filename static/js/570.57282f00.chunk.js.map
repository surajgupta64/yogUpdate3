{"version":3,"file":"static/js/570.57282f00.chunk.js","mappings":"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","sources":["views/Master/client/ClientTransferMaster.js"],"sourcesContent":["import { cilArrowCircleTop } from \"@coreui/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst ClientTransferMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [date, setDate] = useState('')\r\n    const [holiday, setHoliday] = useState('')\r\n    const [status, setStatus] = useState(false)\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getHolidayList()\r\n    }, []);\r\n\r\n    function getHolidayList() {\r\n        axios.get(`${url}/holidaysListMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createHoliday() {\r\n        if (lead != '') {\r\n            const data = {\r\n                username: username,\r\n                LeadSource: lead,\r\n                Status: status,\r\n            }\r\n            axios.post(`${url}/holidaysListMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getHolidayList()\r\n                    setAction1(false)\r\n                    setLead('')\r\n                    setStatus(false)\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter lead Source')\r\n        }\r\n    }\r\n\r\n    const updateStatus = (id, status) => {\r\n        let item = { Status: status }\r\n        fetch(`${url}/holidaysListMaster/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getHolidayList()\r\n            })\r\n        })\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/holidaysListMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getHolidayList()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className=\"mb-3 border-success\">\r\n                    <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                        <CCardTitle className=\"mt-2\">Client Tranfer Master</CCardTitle>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CRow className='d-flex mb-2'>\r\n                            <CCol lg={3} sm={6} className='mb-2'>\r\n                                <CFormInput\r\n                                    type='date'\r\n                                    placeholder=\"Search\"\r\n                                    label=\"Starting Month & Year\"\r\n                                    value={date}\r\n                                    onChange={(e) => setDate(e.target.value)}\r\n\r\n                                />\r\n                            </CCol>\r\n                            <CCol lg={3} sm={6} className='mb-2'>\r\n                                <CFormInput\r\n                                    type='text'\r\n                                    placeholder=\"Enter Holiday\"\r\n                                    label=\"Holiday\"\r\n                                    value={holiday}\r\n                                    onChange={(e) => setHoliday(e.target.value)}\r\n                                />\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CFormSwitch size=\"xl\" label=\"Status\" value={status} onChange={() => setStatus(!status)} />\r\n                        <CButton type=\"button\" color=\"primary\" onClick={() => createHoliday()}>\r\n                            Save\r\n                        </CButton>\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sno.</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Enter Holiday</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Status</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Action</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                <CTableRow >\r\n                                    <CTableDataCell>1</CTableDataCell>\r\n                                    <CTableDataCell>21/11/2022</CTableDataCell>\r\n                                    <CTableDataCell>holi</CTableDataCell>\r\n                                    <CTableDataCell><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} /></CTableDataCell>\r\n                                    <CTableDataCell><MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} size='20px' /></CTableDataCell>\r\n                                </CTableRow>\r\n                                {result1.map((item, index) => (\r\n                                    item.username === username && (\r\n                                        <CTableRow key={index}>\r\n                                            <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                            <CTableDataCell>{item.Date}</CTableDataCell>\r\n                                            <CTableDataCell className=\"text-center\">{item.Holiday}</CTableDataCell>\r\n                                            <CTableDataCell className=\"text-center\"><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.Status} checked={item.Status} onChange={() => updateStatus(item._id, !item.Status)} /></CTableDataCell>\r\n                                            <CTableDataCell> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteData(item._id)} size='20px' /> </CTableDataCell>\r\n                                        </CTableRow>\r\n                                    )\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default ClientTransferMaster\r\n"],"names":["url","useState","setAction1","date","setDate","holiday","setHoliday","status","setStatus","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","headers","getHolidayList","axios","then","res","console","log","data","catch","error","useEffect","lg","sm","className","style","backgroundColor","color","type","placeholder","label","value","onChange","e","target","size","onClick","lead","LeadSource","Status","resp","alert","setLead","createHoliday","align","bordered","borderColor","hover","responsive","cursor","markerStart","map","item","index","Date","Holiday","id","_id","checked","fetch","method","body","stringify","result","json","updateStatus","confirm","warn"],"sourceRoot":""}