{"version":3,"file":"static/js/7125.4db92900.chunk.js","mappings":"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","sources":["views/Master/HRMaster/HolidaysListMaster.js"],"sourcesContent":["import { cilArrowCircleTop } from \"@coreui/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\nconst HolidaysListMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [date, setDate] = useState('')\r\n    const [holiday, setHoliday] = useState('')\r\n    const [status, setStatus] = useState(false)\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getHolidayList()\r\n    }, []);\r\n\r\n    function getHolidayList() {\r\n        axios.get(`${url}/holidaysListMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createHoliday() {\r\n        if (holiday != '' && date != '') {\r\n            const data = {\r\n                username: username,\r\n                Date: date,\r\n                Holiday: holiday,\r\n                Status: status,\r\n            }\r\n            axios.post(`${url}/holidaysListMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getHolidayList()\r\n                    setAction1(false)\r\n                    setDate('')\r\n                    setHoliday('')\r\n                    setStatus(false)\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter lead Source')\r\n        }\r\n    }\r\n\r\n    const updateStatus = (id, status) => {\r\n        let item = { Status: status }\r\n        fetch(`${url}/holidaysListMaster/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getHolidayList()\r\n            })\r\n        })\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/holidaysListMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getHolidayList()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className=\"mb-3 border-success\">\r\n                    <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                        <CCardTitle className=\"mt-2\">Holiday List Master</CCardTitle>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CRow className='d-flex mb-2'>\r\n                            <CCol lg={3} sm={6} className='mb-2'>\r\n                                <CFormInput\r\n                                    type='date'\r\n                                    placeholder=\"Search\"\r\n                                    label=\"Starting Month & Year\"\r\n                                    value={date}\r\n                                    onChange={(e) => setDate(e.target.value)}\r\n\r\n                                />\r\n                            </CCol>\r\n                            <CCol lg={3} sm={6} className='mb-2'>\r\n                                <CFormInput\r\n                                    type='text'\r\n                                    placeholder=\"Enter Holiday\"\r\n                                    label=\"Holiday\"\r\n                                    value={holiday}\r\n                                    onChange={(e) => setHoliday(e.target.value)}\r\n                                />\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CFormSwitch size=\"xl\" label=\"Status\" value={status} onChange={() => setStatus(!status)} />\r\n                        <CButton type=\"button\" color=\"primary\" onClick={() => createHoliday()}>\r\n                            Save\r\n                        </CButton>\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sno.</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Enter Holiday</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Status</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Action</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                {result1.slice(paging * 10, paging * 10 + 10).filter((list) => list.username === username).map((item, index) => (\r\n                                    item.username === username && (\r\n                                        <CTableRow key={index}>\r\n                                            <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                            <CTableDataCell>{moment(item.Date).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                            <CTableDataCell >{item.Holiday}</CTableDataCell>\r\n                                            <CTableDataCell className=\"text-center\"><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.Status} checked={item.Status} onChange={() => updateStatus(item._id, !item.Status)} /></CTableDataCell>\r\n                                            <CTableDataCell> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteData(item._id)} size='20px' /> </CTableDataCell>\r\n                                        </CTableRow>\r\n                                    )\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                    <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                        <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </CPaginationItem>\r\n                        <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                        {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                        {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                        {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                            <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                            : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                        }\r\n                    </CPagination>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default HolidaysListMaster\r\n"],"names":["url","useState","setAction1","date","setDate","holiday","setHoliday","status","setStatus","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","headers","getHolidayList","axios","then","res","console","log","data","reverse","catch","error","useEffect","lg","sm","className","style","backgroundColor","color","type","placeholder","label","value","onChange","e","target","size","onClick","Date","Holiday","Status","resp","alert","createHoliday","align","bordered","borderColor","hover","responsive","slice","filter","list","map","item","index","moment","format","cursor","id","_id","checked","fetch","method","body","stringify","result","json","updateStatus","markerStart","confirm","warn","disabled","active","length"],"sourceRoot":""}