{"version":3,"file":"static/js/7586.6fac2253.chunk.js","mappings":"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","sources":["views/Master/finance/TaxSetupMaster.js"],"sourcesContent":["import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSwitch,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst TaxSetupMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [name, setName] = useState('')\r\n    const [tax, setTax] = useState('')\r\n    const [status, setStatus] = useState(false)\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getTax()\r\n    }, []);\r\n\r\n    function getTax() {\r\n        axios.get(`${url}/taxMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createTax() {\r\n        if (name != '' && tax != '') {\r\n            const data = {\r\n                username: username,\r\n                TaxName: name, Tax: tax, Status: status,\r\n            }\r\n            axios.post(`${url}/taxMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getTax()\r\n                    setAction1(false)\r\n                    setName('')\r\n                    setTax('')\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter lead Source')\r\n        }\r\n    }\r\n    const updateStatus = (id, status) => {\r\n        let item = { Status: status }\r\n        fetch(`${url}/taxMaster/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getTax()\r\n            })\r\n        })\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/taxMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getTax()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Tax Setup Master</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm className=\"mb-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div></div>\r\n                        <div>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CButton className=\"ms-1 mt-2\" onClick={() => setAction1(!action1)}>{action1 ? 'close' : 'Add Tax'}</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    </div>\r\n                    {action1 &&\r\n                        <div>\r\n                            <CRow className='mt-3'>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Tax Name\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                        placeholder=\"Enter Tax Name\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Tax in %\"\r\n                                        value={tax}\r\n                                        onChange={(e) => setTax(e.target.value)}\r\n                                        placeholder=\"Enter Tax in %\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol className=\"mt-2\" lg={6} md={6} sm={12}>\r\n                                    <CRow>\r\n                                        <CCol>\r\n                                            <CFormSwitch size=\"xl\" label=\"Status\" value={status} onChange={() => setStatus(!status)} style={{ defaultChecked: 'false' }} />\r\n                                        </CCol>\r\n                                    </CRow>\r\n\r\n                                    <CButton className=\"mt-2\" onClick={() => createTax()}>Save</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    }\r\n                </CForm>\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>Tax Name</CTableHeaderCell>\r\n                            <CTableHeaderCell>Tax %</CTableHeaderCell>\r\n                            <CTableHeaderCell>Status</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.slice(paging * 10, paging * 10 + 10).map((item, index) => (\r\n                            item.username === username && (\r\n                                <CTableRow key={index}>\r\n                                    <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                    <CTableDataCell>{moment(item.createdAt).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                    <CTableDataCell className=\"text-center\">{item.TaxName}</CTableDataCell>\r\n                                    <CTableDataCell>{item.Tax}</CTableDataCell>\r\n                                    <CTableDataCell><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.Status} checked={item.Status} onChange={() => updateStatus(item._id, !item.Status)} /></CTableDataCell>\r\n                                    <CTableDataCell> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteData(item._id)} size='20px' /> </CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n            <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                </CPaginationItem>\r\n                <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                    <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                    : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                }\r\n            </CPagination>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default TaxSetupMaster;"],"names":["url","useState","action1","setAction1","name","setName","tax","setTax","status","setStatus","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","headers","getTax","axios","then","res","console","log","data","reverse","catch","error","useEffect","className","style","backgroundColor","color","onClick","lg","md","sm","type","id","label","value","onChange","e","target","placeholder","size","defaultChecked","TaxName","Tax","Status","resp","alert","createTax","align","bordered","borderColor","hover","responsive","slice","map","item","index","moment","createdAt","format","cursor","_id","checked","fetch","method","body","stringify","result","json","updateStatus","markerStart","confirm","warn","disabled","active","filter","list","length"],"sourceRoot":""}