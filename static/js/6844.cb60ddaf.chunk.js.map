{"version":3,"file":"static/js/6844.cb60ddaf.chunk.js","mappings":"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","sources":["views/Master/marketing/LeadSourceMaster.js"],"sourcesContent":["import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSwitch,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst LeadSourceMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [lead, setLead] = useState('')\r\n    const [status, setStatus] = useState(false)\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0)\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getLeadSource()\r\n    }, []);\r\n\r\n    function getLeadSource() {\r\n        axios.get(`${url}/leadSourceMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createLead() {\r\n        if (lead != '') {\r\n            const data = {\r\n                username: username,\r\n                LeadSource: lead,\r\n                Status: status,\r\n            }\r\n            axios.post(`${url}/leadSourceMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getLeadSource()\r\n                    setAction1(false)\r\n                    setLead('')\r\n                    setStatus(false)\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter lead Source')\r\n        }\r\n    }\r\n\r\n    const updateStatus = (id, status) => {\r\n        let item = { Status: status }\r\n        fetch(`${url}/leadSourceMaster/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getLeadSource()\r\n            })\r\n        })\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/leadSourceMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getLeadSource()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Lead Source Master</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm className=\"mb-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div></div>\r\n                        <div>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CButton className=\"ms-1 mt-2\" onClick={() => setAction1(!action1)}>{action1 ? 'close' : 'Add Lead Source'}</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    </div>\r\n                    {action1 &&\r\n                        <div>\r\n                            <CRow className='mt-3'>\r\n                                <CCol lg={12} md={12} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Lead Source\"\r\n                                        value={lead}\r\n                                        onChange={(e) => setLead(e.target.value)}\r\n                                        placeholder=\"Enter Lead Source\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol className=\"mt-2\" lg={6} md={6} sm={12}>\r\n                                    <CRow>\r\n                                        <CCol>\r\n                                            <CFormSwitch size=\"xl\" label=\"Status\" value={status} onChange={() => setStatus(!status)} />\r\n                                        </CCol>\r\n                                    </CRow>\r\n\r\n                                    <CButton className=\"mt-2\" onClick={() => createLead()}>Save</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    }\r\n                </CForm>\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Lead Source</CTableHeaderCell>\r\n                            <CTableHeaderCell>Status</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.slice(paging * 10, paging * 10 + 10).map((item, index) => (\r\n                            item.username === username && (\r\n                                <CTableRow key={index}>\r\n                                    <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                    <CTableDataCell>{item.LeadSource}</CTableDataCell>\r\n                                    <CTableDataCell className=\"text-center\"><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.Status} checked={item.Status} onChange={() => updateStatus(item._id, !item.Status)} /></CTableDataCell>\r\n                                    <CTableDataCell> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteData(item._id)} size='20px' /> </CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n            <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                </CPaginationItem>\r\n                <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                    <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                    : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                }\r\n            </CPagination>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default LeadSourceMaster;"],"names":["url","useState","action1","setAction1","lead","setLead","status","setStatus","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","headers","getLeadSource","axios","then","res","console","log","data","reverse","catch","error","useEffect","className","style","backgroundColor","color","onClick","lg","md","sm","type","id","label","value","onChange","e","target","placeholder","size","LeadSource","Status","resp","alert","createLead","align","bordered","borderColor","hover","responsive","slice","map","item","index","cursor","_id","checked","fetch","method","body","stringify","result","json","updateStatus","markerStart","confirm","warn","disabled","active","filter","list","length"],"sourceRoot":""}