{"version":3,"file":"static/js/6025.e4a1dfd8.chunk.js","mappings":"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","sources":["views/leads/FollowupScheduling.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormTextarea,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from '@coreui/react'\r\nimport axios from 'axios';\r\nimport { MdCall, MdDelete, MdEdit, MdMail } from 'react-icons/md';\r\nimport { BsPlusCircle, BsWhatsapp } from 'react-icons/bs';\r\nimport moment from 'moment';\r\nimport AdmissionForm1 from 'src/components/AdmissionForm1';\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst FollowupScheduling = () => {\r\n    var currentdate = new Date();\r\n    var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n        + \"-\" + currentdate.getFullYear();\r\n    var time =\r\n        + currentdate.getHours() + \":\"\r\n        + currentdate.getMinutes();\r\n    const [visible, setVisible] = useState(false)\r\n    const [edit, setEdit] = useState()\r\n    const [visible1, setVisible1] = useState(false)\r\n    const [callReport, setCallReport] = useState(false)\r\n    const [Search1, setSearch1] = useState('')\r\n    const [Search2, setSearch2] = useState('')\r\n    const [Search3, setSearch3] = useState('')\r\n    const [Search4, setSearch4] = useState('')\r\n    const [Search5, setSearch5] = useState('')\r\n    const [Search6, setSearch6] = useState('')\r\n    const [Search7, setSearch7] = useState('')\r\n    const [Search8, setSearch8] = useState('')\r\n    const [Search9, setSearch9] = useState('')\r\n    const [Search10, setSearch10] = useState('')\r\n    const [followForm, setFollowForm] = useState()\r\n    const [error, setError] = useState('')\r\n    const [dateFilter, setDateFilter] = useState({\r\n        startDate: null,\r\n        endDate: null\r\n    })\r\n    const [Name, setName] = useState(\"\");\r\n    const [Contact, setContact] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [ServiceName1, setServiceName1] = useState(\"\");\r\n    const [CallStatus1, setCallStatus1] = useState(\"\");\r\n    const [enquiryStage, setEnquiryStage] = useState('')\r\n    const [FollowupDate, setFollowupDate] = useState(\"\");\r\n    const [appointmentDate, setappointmentDate] = useState(\"\");\r\n    const [appointmentTime, setappointmentTime] = useState(\"\");\r\n    const [TimeFollowp, setTimeFollowp] = useState(\"\");\r\n    const [Discussion, setDiscussion] = useState(\"\");\r\n    const [Counseller, setCounseller] = useState(\"\");\r\n    const [updateItem, setUpdateItem] = useState();\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const centerCode = user.user.centerCode;\r\n    const [result, setResult] = useState([]);\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n\r\n    const [pros, setPros] = useState([])\r\n    useEffect(() => {\r\n        getEnquiry()\r\n        getStaff()\r\n        axios.get(`${url}/prospect/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.warn(res.data.filter((list) => list.status === \"prospect\"))\r\n                setPros(res.data.filter((list) => list.status === \"prospect\"))\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n        axios.get(`${url}/subservice/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }, []);\r\n    const [staff, setStaff] = useState([])\r\n    function getStaff() {\r\n        axios.get(`${url2}/employeeForm/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setStaff(res.data)\r\n                console.log(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const [admissionForm, setAdmissionForm] = useState(false)\r\n    const saveProspect = () => {\r\n        var currentdate = new Date();\r\n        var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n            + \"-\" + currentdate.getFullYear();\r\n        var time =\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n\r\n        if (enquiryStage === 'Appointment') {\r\n            const data1 = { appointmentDate, appointmentTime, appointmentfor: 'Appointment', Counseller: Counseller }\r\n            let data2 = {\r\n                username: username,\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                status: 'CallReport'\r\n            }\r\n\r\n            fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data1)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    alert(\"successfully submitted\")\r\n                    setVisible(false)\r\n                })\r\n            })\r\n\r\n\r\n            fetch(`${url}/prospect/create`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data2)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    setCallReport(false)\r\n                })\r\n            })\r\n\r\n        } else if (enquiryStage === 'Trial Session') {\r\n            const data1 = { appointmentDate, appointmentTime, appointmentfor: 'Trial Session', Counseller: Counseller }\r\n            let data2 = {\r\n                username: username,\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                status: 'CallReport'\r\n            }\r\n\r\n            fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data1)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    alert(\"successfully submitted\")\r\n                    setVisible(false)\r\n                })\r\n            })\r\n\r\n            fetch(`${url}/prospect/create`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data2)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    setCallReport(false)\r\n                })\r\n            })\r\n        } else if (enquiryStage === 'Join') {\r\n            handleAdmission(followForm)\r\n\r\n\r\n            let data2 = {\r\n                username: username,\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                status: 'CallReport'\r\n            }\r\n            fetch(`${url}/prospect/create`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data2)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    setCallReport(false)\r\n                })\r\n            })\r\n        } else if (enquiryStage === 'Prospect') {\r\n            let data = {\r\n                username: username,\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                status: 'prospect'\r\n            }\r\n            let data2 = {\r\n                username: username,\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                status: 'CallReport'\r\n            }\r\n            if (pros.filter((list) => list.EnquiryID === followForm).length > 0) {\r\n                const found = pros.filter((list) => list.EnquiryID === followForm).map((element, index) => {\r\n                    return index === 0 && element._id;\r\n                });\r\n                fetch(`${url}/prospect/update/${found[0]}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n\r\n                const data1 = { Counseller, CallStatus: CallStatus1 }\r\n\r\n                fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data1)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        alert(\"successfully submitted\")\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n            } else if (enquiryStage === 'Not Interested') {\r\n                const data1 = { CallStatus: \"Cold\", Counseller: Counseller }\r\n                let data2 = {\r\n                    username: username,\r\n                    EnquiryID: followForm, CallDate: date, Time: time,\r\n                    Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, enquiryStage: enquiryStage, CallStatus: \"Cold\", FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                    status: 'CallReport'\r\n                }\r\n\r\n                fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data1)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        alert(\"successfully submitted\")\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n\r\n                fetch(`${url}/prospect/create`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data2)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        setCallReport(false)\r\n                    })\r\n                })\r\n            } else {\r\n                fetch(`${url}/prospect/create`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n\r\n                const data1 = { Counseller, CallStatus: CallStatus1, Discussion: Discussion, }\r\n\r\n                fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data1)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        alert(\"successfully submitted\")\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n            }\r\n            fetch(`${url}/prospect/create`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data2)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    setCallReport(false)\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function handleAdmission(id) {\r\n        console.log(id)\r\n        console.log(edit)\r\n        setEdit(null)\r\n        if (id != null) {\r\n            axios.get(`${url}/enquiryForm/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            }).then((res) => {\r\n                setEdit(res.data)\r\n\r\n                if (edit != null && res.data != null) {\r\n                    setAdmissionForm(true)\r\n                    setVisible(false)\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                })\r\n        }\r\n    }\r\n\r\n    const updateProspect = () => {\r\n\r\n        if (FollowupDate !== '' && TimeFollowp !== '') {\r\n            var currentdate = new Date();\r\n            var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n                + \"-\" + currentdate.getFullYear();\r\n            var time =\r\n                + currentdate.getHours() + \":\"\r\n                + currentdate.getMinutes();\r\n            let data = {\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n            }\r\n\r\n            fetch(`${url}/prospect/update/${edit}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n\r\n                    alert(\"successfully submitted\")\r\n                    setVisible(false)\r\n                })\r\n            })\r\n        } else {\r\n            setError('Please Fill All Details')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function getEnquiry() {\r\n        axios.get(`${url}/prospect/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data.filter((list) => list.username === username))\r\n                setResult1(res.data.filter((list) => list.username === username).reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    console.log(result1);\r\n\r\n    function getProspect(id) {\r\n        axios.get(`${url}/enquiryForm/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setUpdateItem(res.data)\r\n                setName(res.data.Fullname)\r\n                setContact(res.data.ContactNumber)\r\n                setServiceName1(res.data.ServiceName)\r\n                setCallStatus1(res.data.CallStatus)\r\n                setEmail(res.data.Emailaddress)\r\n                setVisible(true)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    function getUpdate(id) {\r\n        axios.get(`${url}/prospect/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setUpdateItem(res.data)\r\n                setName(res.data.Name)\r\n                setContact(res.data.Contact)\r\n                setServiceName1(res.data.ServiceName)\r\n                setCallStatus1(res.data.CallStatus)\r\n                setEmail(res.data.Email)\r\n                setFollowupDate(moment(res.data.FollowupDate).utc().format('YYYY-MM-DD'))\r\n                setCounseller(res.data.Counseller)\r\n                setDiscussion(res.data.Discussion)\r\n                setVisible1(true)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function deleteProspect(id) {\r\n\r\n        if (confirm('Do you want to delete this')) {\r\n            fetch(`${url}/prospect/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getEnquiry()\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveCallReport = () => {\r\n        var currentdate = new Date();\r\n        var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n            + \"-\" + currentdate.getFullYear();\r\n        var time =\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n        let data = {\r\n            username: username,\r\n            EnquiryID: followForm, CallDate: date, Time: time,\r\n            Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n            status: 'CallReport'\r\n        }\r\n\r\n        fetch(`${url}/prospect/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n                setVisible(false)\r\n            })\r\n        })\r\n        const data1 = { Counseller }\r\n\r\n        fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data1)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n                alert(\"successfully submitted\")\r\n                setVisible(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    function getCallReport(id) {\r\n        axios.get(`${url}/enquiryForm/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setUpdateItem(res.data)\r\n                setName(res.data.Fullname)\r\n                setContact(res.data.ContactNumber)\r\n                setServiceName1(res.data.ServiceName)\r\n                setCallStatus1(res.data.CallStatus)\r\n                setEmail(res.data.Emailaddress)\r\n                setCallReport(true)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const handleCallReport = (id) => {\r\n        setFollowForm(id)\r\n        getCallReport(id)\r\n    }\r\n\r\n    const handleFollowup = (id) => {\r\n        setFollowForm(id)\r\n        getProspect(id)\r\n    }\r\n\r\n\r\n    function handleEnquiry(id) {\r\n        setEdit(id)\r\n        getUpdate(id)\r\n    }\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className='mb-3 border-top-success border-top-3'>\r\n                    <CCardHeader>\r\n                        <strong className=\"mt-2\">Prospects <span className='float-end'>Total Prospects :{result1.slice(paging * 10, paging * 10 + 10).filter((list) =>\r\n                            list.username === username && list.status === 'prospect' && list.CallStatus !== 'Cold'\r\n                        ).length}</span></strong>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <div className='d-flex justify-content-between mb-2'>\r\n                            <CInputGroup style={{ width: \"500px\" }}>\r\n\r\n                                <CInputGroupText\r\n                                    component=\"label\"\r\n                                    htmlFor=\"inputGroupSelect01\"\r\n                                >\r\n                                    Form\r\n                                </CInputGroupText>\r\n                                <CFormInput\r\n                                    type=\"date\"\r\n                                    value={dateFilter.startDate}\r\n                                    onChange={() => setDateFilter(startDate = e.target.value)}\r\n                                    required\r\n                                /><CInputGroupText\r\n                                    component=\"label\"\r\n                                    htmlFor=\"inputGroupSelect01\"\r\n                                >\r\n                                    To\r\n                                </CInputGroupText>\r\n                                <CFormInput\r\n                                    type=\"date\"\r\n                                    value={dateFilter.endDate}\r\n                                    onChange={() => setDateFilter(endDate = e.target.value)}\r\n                                    required\r\n                                />\r\n                                <CButton type=\"button\" color=\"primary\">\r\n                                    Go\r\n                                </CButton>\r\n                            </CInputGroup>\r\n\r\n                        </div>\r\n                        <div className='d-flex justify-content-between mb-2'>\r\n                            <div className='d-flex justify-content-between float-end'>\r\n                                <CButtonGroup style={{ fontSize: '11px' }} role=\"group\" aria-label=\"Basic example\">\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Scheduled: 0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Attented: 0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Rescheduled:0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Prospect: 0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Missed: 0</CButton>\r\n                                </CButtonGroup>\r\n                            </div>\r\n                        </div>\r\n                        <CModal size='lg' style={{ border: '2px solid #0B5345' }} visible={callReport} color='' onClose={() => setCallReport(false)} >\r\n                            <CModalHeader  >\r\n                                <CModalTitle>Call Report</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <CForm >\r\n                                    <CRow>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Name\"\r\n                                                value={Name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"Enter Name\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"email\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Email Address\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                                placeholder=\"name@example.com\"\r\n                                                aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"number\"\r\n                                                value={Contact}\r\n                                                onChange={(e) => setContact(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Contact No\"\r\n                                                placeholder=\"Enter Number\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={6} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Service Name\"\r\n                                                value={ServiceName1}\r\n                                                onChange={(e) => setServiceName1(e.target.value)}\r\n                                                label=\"Service Name\"\r\n\r\n                                            >\r\n                                                <option>Select Service</option>\r\n                                                {result.map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        item.status === true && (\r\n                                                            <option key={index} value={item.id}>{item.selected_service}</option>\r\n                                                        )\r\n                                                    )\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={6} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                value={Counseller}\r\n                                                onChange={(e) => setCounseller(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Counseller\"\r\n                                                placeholder=\"Enter Counseller Name\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={CallStatus1}\r\n                                                onChange={(e) => setCallStatus1(e.target.value)}\r\n                                                label=\"Call Status\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Cold\", value: \"Cold\" },\r\n                                                    { label: \"Warm\", value: \"Warm\" },\r\n                                                    { label: \"Hot\", value: \"Hot\" },\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                label=\"FollowUp Date\"\r\n                                                type=\"date\"\r\n                                                value={FollowupDate}\r\n                                                onChange={(e) => setFollowupDate(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                label=\"FollowUp Time\"\r\n                                                type=\"time\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                value={TimeFollowp}\r\n                                                onChange={(e) => setTimeFollowp(e.target.value)}\r\n\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol>\r\n                                            <CFormTextarea\r\n                                                id=\"exampleFormControlTextarea1\"\r\n                                                label=\"Discussion\"\r\n                                                value={Discussion}\r\n                                                onChange={(e) => setDiscussion(e.target.value)}\r\n                                                rows=\"2\"\r\n                                                text=\"Must be 8-20 words long.\"\r\n                                            ></CFormTextarea>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                </CForm>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton color=\"secondary\" onClick={() => setCallReport(false)}>\r\n                                    Close\r\n                                </CButton>\r\n                                <CButton type='submit' color=\"primary\" onClick={() => saveCallReport()}>Save Call Report</CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n\r\n                        <CModal size='lg' style={{ border: '2px solid #0B5345' }} visible={visible} color='' onClose={() => setVisible(false)} >\r\n                            <CModalHeader  >\r\n                                <CModalTitle>Prospect Form</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <CForm >\r\n                                    <CRow>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Name\"\r\n                                                value={Name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"Enter Name\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"email\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Email Address\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                                placeholder=\"name@example.com\"\r\n                                                aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"number\"\r\n                                                value={Contact}\r\n                                                onChange={(e) => setContact(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Contact No\"\r\n                                                placeholder=\"Enter Number\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Service Name\"\r\n                                                value={ServiceName1}\r\n                                                onChange={(e) => setServiceName1(e.target.value)}\r\n                                                label=\"Service Name\"\r\n\r\n                                            >\r\n                                                <option>Select Service</option>\r\n                                                {result.map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        item.status === true && (\r\n                                                            <option key={index} value={item.id}>{item.selected_service}</option>\r\n                                                        )\r\n                                                    )\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Assign Staff\"\r\n                                                value={Counseller}\r\n                                                onChange={(e) => setCounseller(e.target.value)}\r\n                                                label='Counseller'\r\n                                            >\r\n                                                <option>Select Counseller</option>\r\n                                                {staff.filter((list) => list.username === username && list.selected === 'Select').map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        <option key={index}>{item.FullName}</option>\r\n                                                    )\r\n                                                ))}</CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={enquiryStage}\r\n                                                onChange={(e) => setEnquiryStage(e.target.value)}\r\n                                                label=\"Prospect Stage\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Appointment\", value: \"Appointment\" },\r\n                                                    { label: \"Trial Session\", value: \"Trial Session\" },\r\n                                                    { label: \"Join\", value: \"Join\" },\r\n                                                    { label: 'Prospect', value: 'Prospect' }\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        {(enquiryStage === 'Appointment') &&\r\n                                            <>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Appointment Date\"\r\n                                                        type=\"date\"\r\n                                                        value={appointmentDate}\r\n                                                        onChange={(e) => setappointmentDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Appointment Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={appointmentTime}\r\n                                                        onChange={(e) => setappointmentTime(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        {(enquiryStage === 'Trial Session') &&\r\n                                            <>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Trial Date\"\r\n                                                        type=\"date\"\r\n                                                        value={appointmentDate}\r\n                                                        onChange={(e) => setappointmentDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Trial Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={appointmentTime}\r\n                                                        onChange={(e) => setappointmentTime(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        {enquiryStage != 'Join' &&\r\n\r\n                                            <CCol lg={4} md={6} sm={12}>\r\n                                                <CFormSelect\r\n                                                    className=\"mb-1\"\r\n                                                    aria-label=\"Select Call Status\"\r\n                                                    value={CallStatus1}\r\n                                                    onChange={(e) => setCallStatus1(e.target.value)}\r\n                                                    label=\"Call Status\"\r\n                                                    options={[\r\n                                                        \"Select\",\r\n                                                        { label: \"Cold\", value: \"Cold\" },\r\n                                                        { label: \"Warm\", value: \"Warm\" },\r\n                                                        { label: \"Hot\", value: \"Hot\" },\r\n                                                    ]}\r\n                                                />\r\n                                            </CCol>\r\n                                        }\r\n                                        {(enquiryStage === 'Prospect') &&\r\n                                            <>\r\n\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"FollowUp Date\"\r\n                                                        type=\"date\"\r\n                                                        value={FollowupDate}\r\n                                                        onChange={(e) => setFollowupDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"FollowUp Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={TimeFollowp}\r\n                                                        onChange={(e) => setTimeFollowp(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        {(enquiryStage === 'Prospect' || enquiryStage === 'Appointment' || enquiryStage === 'Trial Session') &&\r\n                                            <CCol lg={12} md={12} sm={12}>\r\n                                                <CFormTextarea\r\n                                                    id=\"exampleFormControlTextarea1\"\r\n                                                    label=\"Discussion\"\r\n                                                    value={Discussion}\r\n                                                    onChange={(e) => setDiscussion(e.target.value)}\r\n                                                    rows=\"2\"\r\n                                                    text=\"Must be 8-20 words long.\"\r\n                                                ></CFormTextarea>\r\n                                            </CCol>\r\n                                        }\r\n                                    </CRow>\r\n                                </CForm>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                                    Close\r\n                                </CButton>\r\n                                <CButton type='submit' color=\"primary\" onClick={() => saveProspect()}>{enquiryStage === 'Join' ? 'Open Admission Form' : 'Save Prospect'}</CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n                        {admissionForm &&\r\n                            <AdmissionForm1 add={admissionForm} clickfun={() => { setAdmissionForm(false) }} ids={edit} />\r\n                        }\r\n                        <CModal size='lg' style={{ border: '2px solid #0B5345' }} visible={visible1} color='' onClose={() => setVisible1(false)} >\r\n                            <CModalHeader  >\r\n                                <CModalTitle>Prospect Form</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <CForm >\r\n                                    <label style={{ color: 'red' }}>{error}</label>\r\n                                    <CRow>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Name\"\r\n                                                value={Name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"Enter Name\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"email\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Email Address\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                                placeholder=\"name@example.com\"\r\n                                                aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"number\"\r\n                                                value={Contact}\r\n                                                onChange={(e) => setContact(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Contact No\"\r\n                                                placeholder=\"Enter Number\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={6} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Service Name\"\r\n                                                value={ServiceName1}\r\n                                                onChange={(e) => setServiceName1(e.target.value)}\r\n                                                label=\"Service Name\"\r\n\r\n                                            >\r\n                                                <option>Select Service</option>\r\n                                                {result.map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        item.status === true && (\r\n                                                            <option key={index} value={item.id}>{item.selected_service}</option>\r\n                                                        )\r\n                                                    )\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Assign Staff\"\r\n                                                value={Counseller}\r\n                                                onChange={(e) => setCounseller(e.target.value)}\r\n                                                label='Counseller'\r\n                                            >\r\n                                                <option>Select Counseller</option>\r\n                                                {staff.filter((list) => list.username === username && list.selected === 'Select').map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        <option key={index}>{item.FullName}</option>\r\n                                                    )\r\n                                                ))}</CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={enquiryStage}\r\n                                                onChange={(e) => setEnquiryStage(e.target.value)}\r\n                                                label=\"Prospect Stage\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Appointment\", value: \"Appointment\" },\r\n                                                    { label: \"Trial Session\", value: \"Trial Session\" },\r\n                                                    { label: \"Join\", value: \"Join\" },\r\n                                                    { label: 'Enquiry', value: 'Enquiry' },\r\n                                                    { label: \"Not Interested\", value: \"Not Interested\" },\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        {(enquiryStage === 'Appointment' || enquiryStage === 'Trial Session') &&\r\n                                            <>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Appointment Date\"\r\n                                                        type=\"date\"\r\n                                                        value={appointmentDate}\r\n                                                        onChange={(e) => setappointmentDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Appointment Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={appointmentTime}\r\n                                                        onChange={(e) => setappointmentTime(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={CallStatus1}\r\n                                                onChange={(e) => setCallStatus1(e.target.value)}\r\n                                                label=\"Call Status\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Cold\", value: \"Cold\" },\r\n                                                    { label: \"Warm\", value: \"Warm\" },\r\n                                                    { label: \"Hot\", value: \"Hot\" },\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n                                        {(enquiryStage === 'Join' || enquiryStage === 'Enquiry') &&\r\n                                            <>\r\n\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"FollowUp Date\"\r\n                                                        type=\"date\"\r\n                                                        value={FollowupDate}\r\n                                                        onChange={(e) => setFollowupDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"FollowUp Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={TimeFollowp}\r\n                                                        onChange={(e) => setTimeFollowp(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        <CCol>\r\n                                            <CFormTextarea\r\n                                                id=\"exampleFormControlTextarea1\"\r\n                                                label=\"Discussion\"\r\n                                                value={Discussion}\r\n                                                onChange={(e) => setDiscussion(e.target.value)}\r\n                                                rows=\"2\"\r\n                                                text=\"Must be 8-20 words long.\"\r\n                                            ></CFormTextarea>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                </CForm>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton color=\"secondary\" onClick={() => setVisible1(false)}>\r\n                                    Close\r\n                                </CButton>\r\n                                <CButton type='submit' color=\"primary\" onClick={() => updateProspect()}>Update Prospect</CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Enquiry ID</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Time</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Name</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Email</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Mobile</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Service</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Call Status</CTableHeaderCell>\r\n                                    <CTableHeaderCell>FollowUp Details</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Appointment Details</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Enquiry Stage</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Discussion</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Counseller</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Action</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Edit</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                <CTableRow>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"60px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n\r\n                                            value={Search1}\r\n                                            onChange={(e) => setSearch1(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"90px\" }}\r\n                                            disabled\r\n                                            value={Search2}\r\n                                            onChange={(e) => setSearch2(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            value={Search3}\r\n                                            onChange={(e) => setSearch3(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            value={Search4}\r\n                                            onChange={(e) => setSearch4(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"number\"\r\n                                            value={Search5}\r\n                                            onChange={(e) => setSearch5(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"80px\" }}\r\n                                            value={Search6}\r\n                                            onChange={(e) => setSearch6(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            value={Search7}\r\n                                            onChange={(e) => setSearch7(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            value={Search8}\r\n                                            onChange={(e) => setSearch8(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            value={Search9}\r\n                                            onChange={(e) => setSearch9(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            value={Search10}\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            onChange={(e) => setSearch10(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                </CTableRow>\r\n                                {result1.slice(paging * 10, paging * 10 + 10).filter((list) =>\r\n                                    list.username === username && (list.status === 'prospect') && list.CallDate.toString().includes(Search1) && list.Name.toLowerCase().includes(Search3.toLowerCase()) && list.Email.toLowerCase().includes(Search4.toLowerCase())\r\n                                    && list.Contact.toString().includes(Search5.toString()) && list.ServiceName.toLowerCase().includes(Search6.toLowerCase()) && list.CallStatus !== 'Cold'\r\n                                ).map((item, index) => (\r\n                                    <CTableRow key={index}>\r\n                                        <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                        <CTableDataCell>{centerCode}Q{index + 10 + (paging * 10)}</CTableDataCell>\r\n                                        <CTableDataCell className='text-center'>{moment(item.CallDate).format(\"DD-MM-YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(item.Time, \"HH:mm\").format(\"hh:mm A\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Name}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Email}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Contact}</CTableDataCell>\r\n                                        <CTableDataCell>{item.ServiceName}</CTableDataCell>\r\n                                        <CTableDataCell>{item.CallStatus}</CTableDataCell>\r\n                                        <CTableDataCell>{item.FollowupDate && moment(item.FollowupDate).format(\"DD-MM-YYYY\")}<br />{item.TimeFollowp && moment(item.TimeFollowp, \"HH:mm\").format(\"hh:mm A\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.AppointmentDate && moment(item.AppointmentDate).format(\"DD-MM-YYYY\")}<br />{item.AppointmentTime && moment(item.AppointmentTime, \"HH:mm\").format(\"hh:mm A\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.enquiryStage}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Discussion}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Counseller}</CTableDataCell>\r\n                                        <CTableDataCell className='text-center'><a href={`tel:+91${item.Contact}`} target=\"_black\"><MdCall style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => { setCallReport(true), handleCallReport(item.EnquiryID) }} size='20px' /></a><a href={`https://wa.me/${item.Contact}`} target=\"_black\"><BsWhatsapp style={{ marginLeft: \"4px\", cursor: 'pointer', markerStart: '10px' }} onClick={() => { setCallReport(true), handleCallReport(item.EnquiryID) }} size='20px' /></a><a href={`mailto: ${item.Email}`} target=\"_black\"> <MdMail style={{ cursor: 'pointer', markerStart: '10px', marginLeft: \"4px\" }} onClick={() => { setCallReport(true), handleCallReport(item.EnquiryID) }} size='20px' /></a> <BsPlusCircle id={item._id} style={{ cursor: 'pointer', markerStart: '10px', marginLeft: \"4px\" }} onClick={() => handleFollowup(item.EnquiryID)} /></CTableDataCell>\r\n                                        <CTableDataCell className='text-center'><MdEdit id={item._id} style={{ fontSize: '35px', cursor: 'pointer', markerStart: '10px' }} onClick={() => handleEnquiry(item._id)} size='20px' /> <MdDelete style={{ cursor: 'pointer', markerStart: '10px', marginLeft: \"5px\" }} onClick={() => deleteProspect(item._id)} size='20px' /></CTableDataCell>\r\n                                    </CTableRow>\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                    <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                        <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </CPaginationItem>\r\n                        <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                        {result1.filter((list) =>\r\n                            list.username === username && list.status === 'prospect' && list.CallDate.toString().includes(Search1) && list.Name.toLowerCase().includes(Search3.toLowerCase()) && list.Email.toLowerCase().includes(Search4.toLowerCase())\r\n                            && list.Contact.toString().includes(Search5.toString()) && list.ServiceName.toLowerCase().includes(Search6.toLowerCase()) && list.CallStatus.toLowerCase().includes(Search7.toLowerCase())\r\n                        ).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                        {result1.filter((list) =>\r\n                            list.username === username && list.status === 'prospect' && list.CallDate.toString().includes(Search1) && list.Name.toLowerCase().includes(Search3.toLowerCase()) && list.Email.toLowerCase().includes(Search4.toLowerCase())\r\n                            && list.Contact.toString().includes(Search5.toString()) && list.ServiceName.toLowerCase().includes(Search6.toLowerCase()) && list.CallStatus.toLowerCase().includes(Search7.toLowerCase())\r\n                        ).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                        {result1.filter((list) =>\r\n                            list.username === username && list.status === 'prospect' && list.CallDate.toString().includes(Search1) && list.Name.toLowerCase().includes(Search3.toLowerCase()) && list.Email.toLowerCase().includes(Search4.toLowerCase())\r\n                            && list.Contact.toString().includes(Search5.toString()) && list.ServiceName.toLowerCase().includes(Search6.toLowerCase()) && list.CallStatus.toLowerCase().includes(Search7.toLowerCase())\r\n                        ).length > (paging + 1) * 10 ?\r\n                            <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                            : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                        }\r\n                    </CPagination>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default FollowupScheduling\r\n"],"names":["url","url2","currentdate","Date","getDay","getMonth","getFullYear","getHours","getMinutes","useState","visible","setVisible","edit","setEdit","visible1","setVisible1","callReport","setCallReport","Search1","setSearch1","Search2","setSearch2","Search3","setSearch3","Search4","setSearch4","Search5","setSearch5","Search6","setSearch6","Search7","setSearch7","Search8","setSearch8","Search9","setSearch9","Search10","setSearch10","followForm","setFollowForm","error","setError","startDate","endDate","dateFilter","setDateFilter","Name","setName","Contact","setContact","email","setEmail","ServiceName1","setServiceName1","CallStatus1","setCallStatus1","enquiryStage","setEnquiryStage","FollowupDate","setFollowupDate","appointmentDate","setappointmentDate","appointmentTime","setappointmentTime","TimeFollowp","setTimeFollowp","Discussion","setDiscussion","Counseller","setCounseller","setUpdateItem","user","JSON","parse","localStorage","getItem","token","username","centerCode","result","setResult","result1","setResult1","paging","setPaging","pros","setPros","useEffect","getEnquiry","axios","headers","then","res","setStaff","data","console","log","catch","warn","filter","list","status","staff","admissionForm","setAdmissionForm","saveProspect","id","date","time","data1","appointmentfor","data2","EnquiryID","CallDate","Time","Email","ServiceName","AppointmentDate","AppointmentTime","CallStatus","fetch","method","body","stringify","resp","json","alert","length","found","map","element","index","_id","reverse","handleCallReport","Fullname","ContactNumber","Emailaddress","getCallReport","handleFollowup","getProspect","handleEnquiry","moment","utc","format","getUpdate","lg","sm","className","slice","style","width","component","htmlFor","type","value","onChange","e","target","required","color","fontSize","role","variant","size","border","onClose","md","label","placeholder","item","selected_service","options","rows","text","onClick","saveCallReport","selected","FullName","add","clickfun","ids","updateProspect","align","bordered","borderColor","hover","responsive","backgroundColor","minWidth","disabled","toString","includes","toLowerCase","href","cursor","markerStart","marginLeft","confirm","active"],"sourceRoot":""}