{"version":3,"file":"static/js/5661.7c260f49.chunk.js","mappings":"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","sources":["components/DataTable.js","views/hr/StaffCheckIns.js","../node_modules/@coreui/icons/js/free/cil-arrow-circle-top.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CFormSwitch,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst DataTable = ({ heading, data }) => {\r\n\r\n    return (\r\n        <CTable align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                <CTableRow >\r\n                    {heading.map((item, index) => (\r\n                        <CTableHeaderCell key={index}>{item.heading}</CTableHeaderCell>\r\n                    ))}\r\n                </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n                {data.map((item, index) => (\r\n                    <TableRow key={index} item={item} column={heading} />\r\n                ))}\r\n            </CTableBody>\r\n        </CTable>\r\n    );\r\n};\r\n\r\nconst TableRow = ({ item, column }) => (\r\n    <CTableRow>\r\n        {column.map((columnItem, index) => {\r\n            return (\r\n                <CTableDataCell key={index}>\r\n                    {columnItem.value === 'sr' && index + 1}\r\n                    {columnItem.value !== undefined && item[`${columnItem.value}`]}\r\n                    {columnItem.iconBtn !== undefined && (\r\n                        <CIcon\r\n                            size=\"xl\"\r\n                            style={{ borderRadius: '15px' }}\r\n                            icon={columnItem.iconBtn}\r\n                        />\r\n                    )}\r\n                    {columnItem.Btn === 'switch' && (\r\n                        <CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} />\r\n                        //checked={item[`${columnItem.switchValue}`]} onChange={columnItem.change(item['_id'])}\r\n                    )}\r\n                    {columnItem.btn !== undefined && (\r\n                        <CButton style={{ color: 'white', backgroundColor: '#0B5345' }}> {columnItem.btn}</CButton>\r\n                    )}\r\n                    {columnItem.com !== undefined && (\r\n                        columnItem.com\r\n                    )}\r\n                </CTableDataCell>\r\n\r\n            )\r\n        })}\r\n    </CTableRow >\r\n);\r\n\r\nexport default DataTable;\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilArrowCircleBottom, cilArrowCircleTop, cilFile, cilInfo } from '@coreui/icons'\r\nimport { FaBeer } from 'react-icons/fa';\r\nimport DataTable from 'src/components/DataTable'\r\nimport { MdDelete, MdEdit } from 'react-icons/md';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\n\r\nconst StaffCheckIns = () => {\r\n\r\n\r\n    const time = null;\r\n    const [ctime, setDate] = useState(time);\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const centerCode = user.user.centerCode;\r\n    const [result1, setResult1] = useState([]);\r\n    const [allClient, setAllclient] = useState([]);\r\n    useEffect(() => {\r\n        getEnquiry()\r\n        getClient()\r\n    }, []);\r\n\r\n    function getEnquiry() {\r\n        axios.get(`${url}/staffAttendance/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setResult1(res.data)\r\n                console.log(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function getClient() {\r\n        axios.get(`${url}/employeeForm/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setAllclient(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const handelTime = () => {\r\n        let time = new Date().toLocaleTimeString();\r\n        var currentdate = new Date();\r\n        var date = currentdate.getFullYear() + \"/\" + currentdate.getMonth()\r\n            + \"/\" + currentdate.getDay();\r\n\r\n        setDate(time);\r\n        let data = {\r\n            username: username, StaffName: client, centerId: centerCode, attentanceId: attendanceID, checkDate: date, checkIn: time\r\n        }\r\n\r\n        fetch(`${url}/staffAttendance/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n                alert(\"successfully submitted\")\r\n                setAttendance(2)\r\n            })\r\n        })\r\n    }\r\n\r\n    const CheckOut = (id) => {\r\n        let time2 = new Date().toLocaleTimeString();\r\n        let item = { checkOut: time2 }\r\n        fetch(`${url}/staffAttendance/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getEnquiry()\r\n            })\r\n        })\r\n    }\r\n\r\n    const deleteEnquiry = (id) => {\r\n        fetch(`${url}/staffAttendance/delete/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getEnquiry()\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className=\"mb-3 border-success\">\r\n                    <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                        <CCardTitle className=\"mt-2\">Staff Check Ins</CCardTitle>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CRow className='d-flex mb-2'>\r\n                            <CCol lg={3} sm={6} className='mb-2'>\r\n                                <CFormSelect\r\n                                    id=\"inputGroupSelect04\"\r\n                                    aria-label=\"Example select with button addon\"\r\n                                >\r\n                                    <option>Name</option>\r\n                                    <option value=\"1\">Location</option>\r\n                                    <option value=\"3\">Mobile</option>\r\n                                    <option value=\"3\">Email</option>\r\n                                    <option value=\"2\">Department</option>\r\n                                    <option value=\"2\">Desgantion</option>\r\n                                </CFormSelect>\r\n                            </CCol>\r\n\r\n                            <CCol lg={4} sm={6} className='mb-2'>\r\n                                <CInputGroup>\r\n                                    <CFormInput\r\n                                        type='date'\r\n                                        placeholder=\"Search\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"button-addon2\"\r\n                                    />\r\n                                    <CButton type=\"button\" color=\"primary\">\r\n                                        Search\r\n                                    </CButton>\r\n                                </CInputGroup>\r\n                            </CCol>\r\n                            <CCol lg={5} sm={6} className='mb-2' >\r\n                                <CButtonGroup className='float-end'>\r\n                                    <CButton color=\"primary\">\r\n                                        <CIcon icon={cilArrowCircleTop} />\r\n                                        {' '}Export\r\n                                    </CButton>\r\n                                </CButtonGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Staff Name</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Attendance ID</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Center ID</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Check Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>CheckIn Time</CTableHeaderCell>\r\n                                    <CTableHeaderCell>CheckOut Time</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Action</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Edit</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                {result1.reverse().filter((list) => list.username === username).map((item, index) => (\r\n                                    <CTableRow key={index}>\r\n                                        <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                        <CTableDataCell>{item.StaffName}</CTableDataCell>\r\n                                        <CTableDataCell>{item.attentanceId}</CTableDataCell>\r\n                                        <CTableDataCell>{item.centerId}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(item.createdAt).format(\"LL\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.checkIn}</CTableDataCell>\r\n                                        <CTableDataCell>{item.checkOut}</CTableDataCell>\r\n                                        <CTableDataCell>{item.checkOut === undefined ? <CButton color='danger' onClick={() => CheckOut(item._id)}>Check Out</CButton> : <CButton disabled color='danger' onClick={() => CheckOut(item._id)}>Check Out</CButton>}</CTableDataCell>\r\n                                        <CTableDataCell><MdEdit style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteEnquiry(item._id)} size='20px' /> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteEnquiry(item._id)} size='20px' /> </CTableDataCell>\r\n                                    </CTableRow>\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default StaffCheckIns\r\n","export const cilArrowCircleTop = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,16C123.452,16,16,123.452,16,256S123.452,496,256,496,496,388.548,496,256,388.548,16,256,16ZM403.078,403.078a207.253,207.253,0,1,1,44.589-66.125A207.332,207.332,0,0,1,403.078,403.078Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='142.319 241.027 164.947 263.654 240 188.602 240 376 272 376 272 188.602 347.053 263.654 369.681 241.027 256 127.347 142.319 241.027' class='ci-primary'/>\"]"],"names":["TableRow","item","column","map","columnItem","index","value","undefined","iconBtn","size","style","borderRadius","icon","Btn","cursor","btn","color","backgroundColor","com","heading","data","align","bordered","borderColor","hover","responsive","url","useState","user","JSON","parse","localStorage","getItem","token","username","centerCode","result1","setResult1","setAllclient","getEnquiry","axios","headers","then","res","console","log","catch","error","useEffect","CheckOut","id","checkOut","Date","toLocaleTimeString","fetch","method","body","stringify","result","json","resp","deleteEnquiry","lg","sm","className","type","placeholder","cilArrowCircleTop","reverse","filter","list","StaffName","attentanceId","centerId","moment","createdAt","format","checkIn","onClick","_id","disabled","markerStart"],"sourceRoot":""}