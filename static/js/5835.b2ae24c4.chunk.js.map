{"version":3,"file":"static/js/5835.b2ae24c4.chunk.js","mappings":"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","sources":["views/forms/ClientCheckin.js","../node_modules/@coreui/icons/js/free/cil-account-logout.js","../node_modules/@coreui/icons/js/free/cil-check-circle.js"],"sourcesContent":["import { cilAccountLogout, cilCheckCircle, cilFingerprint } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { CButton, CCard, CCardBody, CCardHeader, CCardText, CCol, CFormInput, CFormSelect, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { MdDelete, MdEdit } from 'react-icons/md'\r\nimport moment from 'moment/moment'\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst ClientCheckin = () => {\r\n    const [attendance, setAttendance] = useState(0);\r\n    const [attendanceID, setAttendanceID] = useState('');\r\n    const [client, setClient] = useState('');\r\n    const [clientNumber, setClientNumber] = useState('');\r\n    const [centarId, setCentarId] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [type, setType] = useState('')\r\n\r\n    const time = null;\r\n    const [ctime, setDate] = useState(time);\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const centerCode = user.user.centerCode;\r\n    const [result1, setResult1] = useState([]);\r\n    const [allClient, setAllclient] = useState([]);\r\n    useEffect(() => {\r\n        getEnquiry()\r\n        getClient()\r\n    }, []);\r\n\r\n    function getEnquiry() {\r\n        axios.get(`${url}/clientAttendance/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setResult1(res.data)\r\n                console.log(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function getClient() {\r\n        axios.get(`${url}/memberForm/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setAllclient(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const handelTime = () => {\r\n        let time = new Date().toLocaleTimeString();\r\n        var currentdate = new Date();\r\n        var date = currentdate.getFullYear() + \"/\" + currentdate.getMonth()\r\n            + \"/\" + currentdate.getDay();\r\n\r\n        setDate(time);\r\n        let data = {\r\n            username: username, ClientName: client, ClientMobile: clientNumber, centerId: centerCode, attentanceId: attendanceID, checkDate: date, checkIn: time\r\n        }\r\n\r\n        fetch(`${url}/clientAttendance/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n                alert(\"successfully submitted\")\r\n                setAttendance(2)\r\n            })\r\n        })\r\n    }\r\n\r\n    const CheckOut = (id) => {\r\n        let time2 = new Date().toLocaleTimeString();\r\n        let item = { checkOut: time2 }\r\n        fetch(`${url}/clientAttendance/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getEnquiry()\r\n            })\r\n        })\r\n    }\r\n\r\n    const submitBtn = () => {\r\n        allClient.filter((list) => list.AttendanceID.includes(attendanceID)).length;\r\n        if (allClient.filter((list) => list.AttendanceID.includes(attendanceID)).length) {\r\n            allClient.filter((list) =>\r\n                list.AttendanceID.includes(attendanceID)\r\n            ).map((data) => (\r\n                setClient(data.Fullname),\r\n                setAttendanceID(data.AttendanceID),\r\n                setCentarId(data.CenterID),\r\n                setAttendance(1),\r\n                setStatus(data.status),\r\n                setError('')\r\n            ))\r\n        } else {\r\n            setError('Not Found')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                Client CheckIn\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CRow>\r\n                    <CCol lg={4}>\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <label style={{ color: 'red' }}>{error}</label>\r\n                                <CRow>\r\n                                    <CCol xs={5}>\r\n                                        <CIcon icon={cilFingerprint} size=\"8xl\" />\r\n                                    </CCol>\r\n                                    <CCol className='mt-1'>\r\n                                        <CFormSelect\r\n                                            value={type}\r\n                                            onChange={(e) => setType(e.target.value)}\r\n                                        >\r\n                                            <option>Select</option>\r\n                                            <option>Name</option>\r\n                                            <option>Mobile</option>\r\n                                            <option>Attendance Id</option>\r\n                                        </CFormSelect>\r\n                                        {type === 'Name' &&\r\n                                            <CFormSelect\r\n                                                label=\"Name\"\r\n                                                value={client}\r\n                                                onChange={(e) => setClient(e.target.value)}\r\n                                            >\r\n                                                <option >Select</option>\r\n                                                {allClient.map((item, index) => (\r\n                                                    <option key={index} value={item._id}>{item.Fullname} {item.ContactNumber}</option>\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        }\r\n                                        {type === 'Mobile' &&\r\n                                            <CFormInput\r\n                                                type=\"text\"\r\n                                                label='Mobile'\r\n                                                placeholder=\"Enter Mobile Number\"\r\n                                                value={clientNumber}\r\n                                                onChange={(e) => setClientNumber(e.target.value)}\r\n                                            />\r\n                                        }\r\n                                        {type === 'Attendance Id' &&\r\n\r\n                                            <CFormInput\r\n                                                type=\"text\"\r\n                                                label='Attendance ID'\r\n                                                placeholder=\"Enter Attendance ID\"\r\n                                                value={attendanceID}\r\n                                                onChange={(e) => setAttendanceID(e.target.value)}\r\n                                            />\r\n                                        }\r\n                                    </CCol>\r\n                                </CRow>\r\n                                {type === 'Name' &&\r\n                                    <CButton className='mt-2 float-end' onClick={submitBtn}>Submit</CButton>\r\n                                }\r\n                                {type === 'Mobile' &&\r\n                                    <CButton className='mt-2 float-end' onClick={submitBtn}>Submit</CButton>\r\n                                }\r\n                                {type === 'Attendance Id' &&\r\n                                    <CButton className='mt-2 float-end' onClick={submitBtn}>Submit</CButton>\r\n                                }\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    {attendance >= 1 &&\r\n                        <CCol lg={4}>\r\n                            <CCard>\r\n                                <CCardBody>\r\n                                    <CRow>\r\n                                        <CCol xs={5}>\r\n\r\n                                            <CIcon icon={cilCheckCircle} size=\"8xl\" />\r\n                                        </CCol>\r\n                                        <CCol className='mt-3'>\r\n                                            <CCardText>Client Name: {client}<br />\r\n                                                Attendance ID: {attendanceID}<br />\r\n                                                Center ID: {centarId}<br />\r\n                                                Status: {status}<br />\r\n\r\n                                            </CCardText>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                    {ctime == null &&\r\n                                        <CButton className='mt-1 float-end' onClick={handelTime}>Check In</CButton>\r\n                                    }\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    }\r\n                    {attendance === 2 &&\r\n                        <CCol lg={4}>\r\n                            <CCard>\r\n                                <CCardBody>\r\n                                    <CRow>\r\n                                        <CCol xs={5} className='mt-2'>\r\n                                            <CIcon icon={cilAccountLogout} size=\"7xl\" />\r\n                                        </CCol>\r\n                                        <CCol className='mt-3'>\r\n                                            <CCardText>Client Name: {client}<br />\r\n                                                Attendance ID: {attendanceID}<br />\r\n                                                Attendance Time: {ctime}\r\n                                            </CCardText>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                    {ctime != null &&\r\n                                        <CButton className='mt-1 float-end' onClick={() => setAttendance(0)}>Done !</CButton>\r\n                                    }\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    }\r\n                </CRow>\r\n\r\n\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Client Name</CTableHeaderCell>\r\n                            <CTableHeaderCell>Attendance ID</CTableHeaderCell>\r\n                            <CTableHeaderCell>Center ID</CTableHeaderCell>\r\n                            <CTableHeaderCell>Check Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>CheckIn Time</CTableHeaderCell>\r\n                            <CTableHeaderCell>CheckOut Time</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.reverse().filter((list) => list.username === username).map((item, index) => (\r\n                            <CTableRow key={index}>\r\n                                <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                <CTableDataCell>{item.ClientName}</CTableDataCell>\r\n                                <CTableDataCell>{item.attentanceId}</CTableDataCell>\r\n                                <CTableDataCell>{item.centerId}</CTableDataCell>\r\n                                <CTableDataCell>{moment(item.createdAt).format(\"LL\")}</CTableDataCell>\r\n                                <CTableDataCell>{item.checkIn}</CTableDataCell>\r\n                                <CTableDataCell>{item.checkOut}</CTableDataCell>\r\n                                <CTableDataCell>{item.checkOut === undefined ? <CButton color='danger' onClick={() => CheckOut(item._id)}>Check Out</CButton> : <CButton disabled color='danger' onClick={() => CheckOut(item._id)}>Check Out</CButton>}</CTableDataCell>\r\n                            </CTableRow>\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n        </CCard>\r\n    )\r\n}\r\n\r\nexport default ClientCheckin\r\n","export const cilAccountLogout = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='77.155 272.034 351.75 272.034 351.75 272.033 351.75 240.034 351.75 240.033 77.155 240.033 152.208 164.98 152.208 164.98 152.208 164.979 129.58 142.353 15.899 256.033 15.9 256.034 15.899 256.034 129.58 369.715 152.208 347.088 152.208 347.087 152.208 347.087 77.155 272.034' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='160 16 160 48 464 48 464 464 160 464 160 496 496 496 496 16 160 16' class='ci-primary'/>\"]","export const cilCheckCircle = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M426.072,86.928A238.75,238.75,0,0,0,88.428,424.572,238.75,238.75,0,0,0,426.072,86.928ZM257.25,462.5c-114,0-206.75-92.748-206.75-206.75S143.248,49,257.25,49,464,141.748,464,255.75,371.252,462.5,257.25,462.5Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='221.27 305.808 147.857 232.396 125.23 255.023 221.27 351.063 388.77 183.564 366.142 160.937 221.27 305.808' class='ci-primary'/>\"]"],"names":["url","useState","attendance","setAttendance","attendanceID","setAttendanceID","client","setClient","clientNumber","setClientNumber","centarId","setCentarId","status","setStatus","error","setError","type","setType","ctime","setDate","user","JSON","parse","localStorage","getItem","token","username","centerCode","result1","setResult1","allClient","setAllclient","getEnquiry","axios","headers","then","res","data","console","log","catch","useEffect","CheckOut","id","item","checkOut","Date","toLocaleTimeString","fetch","method","body","stringify","result","json","resp","submitBtn","filter","list","AttendanceID","includes","length","map","Fullname","CenterID","className","style","backgroundColor","color","lg","xs","icon","cilFingerprint","size","value","onChange","e","target","label","index","_id","ContactNumber","placeholder","onClick","cilCheckCircle","time","currentdate","date","getFullYear","getMonth","getDay","ClientName","ClientMobile","centerId","attentanceId","checkDate","checkIn","alert","cilAccountLogout","align","bordered","borderColor","hover","responsive","reverse","moment","createdAt","format","undefined","disabled"],"sourceRoot":""}