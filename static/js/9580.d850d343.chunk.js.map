{"version":3,"file":"static/js/9580.d850d343.chunk.js","mappings":"iUAOMA,EAAM,+BAgQZ,UA7PqB,WACjB,OAAoCC,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAiBS,GAAjB,WACA,GAA4BT,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KAAeC,EAAf,KACA,GAA0BX,EAAAA,EAAAA,UAAS,IAAnC,eAAOY,EAAP,KAAcC,EAAd,KAGA,GAAyBb,EAAAA,EAAAA,UADZ,MACb,eAAOc,EAAP,KACIC,GADJ,KACWC,KAAKC,MAAMC,aAAaC,QAAQ,eACrCC,EAAQL,EAAKK,MACbC,EAAWN,EAAKA,KAAKM,SACrBC,EAAaP,EAAKA,KAAKO,WAC7B,GAA4BtB,EAAAA,EAAAA,YAA5B,eAAOuB,EAAP,KAAeC,EAAf,KACA,GAAkCxB,EAAAA,EAAAA,YAAlC,eAAOyB,EAAP,KAAkBC,EAAlB,KACA,IAAkC1B,EAAAA,EAAAA,YAAlC,iBAAO2B,GAAP,MAAkBC,GAAlB,MACA,IAA8B5B,EAAAA,EAAAA,UAAS,IAAvC,iBAAO6B,GAAP,MAAgBC,GAAhB,MACA,IAAkC9B,EAAAA,EAAAA,UAAS,IAA3C,iBAAO+B,GAAP,MAAkBC,GAAlB,MACA,IAAoBhC,EAAAA,EAAAA,YAApB,iBAAOiC,GAAP,MAAWC,GAAX,MAMA,SAASC,KACLC,IAAAA,IAAA,UAAarC,EAAb,wBAAwC,CACpCsC,QAAS,CACL,cAAgB,UAAhB,OAA2BjB,MAG9BkB,MAAK,SAACC,GACHT,GAAWS,EAAIC,MACfC,QAAQC,IAAIH,EAAIC,KACnB,IACAG,OAAM,SAAC/B,GACJ6B,QAAQ7B,MAAMA,EACjB,GACR,EAlBDgC,EAAAA,EAAAA,YAAU,WACNT,KAoBAC,IAAAA,IAAA,UAAarC,EAAb,qBAAqC,CACjCsC,QAAS,CACL,cAAgB,UAAhB,OAA2BjB,MAG9BkB,MAAK,SAACC,GACHE,QAAQC,IAAIH,EAAIC,MAChBR,GAAaO,EAAIC,MACjBlC,EAAUiC,EAAIC,KAAKK,UACnBrC,EAAW+B,EAAIC,KAAKM,cACvB,IACAH,OAAM,SAAC/B,GACJ6B,QAAQ7B,MAAMA,EACjB,GA/BR,GAAE,IAoCH,IA2BMmC,GAAW,SAACd,GACd,IACIe,EAAO,CAAEC,UADD,IAAIC,MAAOC,sBAEvBC,MAAM,GAAD,OAAIrD,EAAJ,mCAAkCkC,GAAM,CACzCoB,OAAQ,OACRhB,QAAS,CACL,cAAgB,UAAhB,OAA2BjB,GAC3B,OAAU,mBACV,eAAgB,oBAEpBkC,KAAMtC,KAAKuC,UAAUP,KACtBV,MAAK,SAACkB,GACLA,EAAOC,OAAOnB,MAAK,SAACoB,GAChBvB,IACH,GACJ,GACJ,EAoBD,OACI,UAAC,KAAD,CAAOwB,UAAU,sBAAjB,WACI,SAAC,KAAD,CAAaC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAAzD,4BAGA,UAAC,KAAD,YACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAMC,GAAI,EAAV,UACI,SAAC,KAAD,WACI,UAAC,KAAD,YACI,kBAAOH,MAAO,CAAEE,MAAO,OAAvB,SAAiClD,KACjC,UAAC,KAAD,YACI,SAAC,KAAD,CAAMoD,GAAI,EAAV,UACI,SAAC,IAAD,CAAOC,KAAMC,EAAAA,EAAgBC,KAAK,WAEtC,SAAC,KAAD,CAAMR,UAAU,OAAhB,UACI,SAAC,KAAD,CACIS,KAAK,OACLC,MAAM,gBACNC,YAAY,sBACZC,MAAOpE,EACPqE,SAAU,SAACC,GAAD,OAAOrE,EAAgBqE,EAAEC,OAAOH,MAAhC,UAItB,SAAC,KAAD,CAASZ,UAAU,iBAAiBgB,QA3C9C,WACd5C,GAAU6C,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAaC,SAAS5E,EAArC,IAAoD6E,OACjEjD,GAAU6C,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAaC,SAAS5E,EAArC,IAAoD6E,OACrEjD,GAAU6C,QAAO,SAACC,GAAD,OACbA,EAAKC,aAAaC,SAAS5E,EADd,IAEf8E,KAAI,SAACzC,GAAD,OACFlC,EAAUkC,EAAKK,UACfzC,EAAgBoC,EAAKsC,cACrBrE,EAAY+B,EAAK0C,UACjBhF,EAAc,GACdS,EAAU6B,EAAK9B,QACfG,EAAS,GANP,IASNA,EAAS,YAEhB,EA2B2B,2BAIXZ,GAAc,IACX,SAAC,KAAD,CAAM8D,GAAI,EAAV,UACI,SAAC,KAAD,WACI,UAAC,KAAD,YACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAMC,GAAI,EAAV,UAEI,SAAC,IAAD,CAAOC,KAAMkB,EAAAA,EAAgBhB,KAAK,WAEtC,UAAC,KAAD,CAAMR,UAAU,OAAhB,WACI,UAAC,KAAD,0BAAwBtD,GAAO,kBAA/B,kBACoBF,GAAa,kBADjC,cAEgBmB,GAAW,kBAF3B,WAGaZ,EAAS,SAAW,YAAW,sBAE5C,SAAC,KAAD,CACI0D,KAAK,OACLG,MAAOhD,EACPiD,SAAU,SAACC,GAAD,OAAOjD,EAAUiD,EAAEC,OAAOH,MAA1B,KAEd,SAAC,KAAD,CACIH,KAAK,OACLG,MAAO9C,EACP+C,SAAU,SAACC,GAAD,OAAO/C,EAAa+C,EAAEC,OAAOH,MAA7B,UAIZ,MAATzD,IACG,SAAC,KAAD,CAAS6C,UAAU,iBAAiBgB,QAxHrD,YACJ,IAAIzB,MAAOC,qBAAtB,IACIiC,EAAc,IAAIlC,KAIlBV,GAHO4C,EAAYC,cAAsBD,EAAYE,WAC7CF,EAAYG,SAEb,CACPlE,SAAUA,EAAUmE,UAAWnF,EAAQoF,aAAclF,EAASmF,SAAUpE,EAAYqE,aAAcxF,EAAcyF,UAAWrE,EAAQsE,QAASpE,IAGhJ2B,MAAM,GAAD,OAAIrD,EAAJ,2BAAkC,CACnCsD,OAAQ,OACRhB,QAAS,CACL,cAAgB,UAAhB,OAA2BjB,GAC3B,OAAU,mBACV,eAAgB,oBAEpBkC,KAAMtC,KAAKuC,UAAUf,KACtBF,MAAK,SAACoB,GACLA,EAAKD,OAAOnB,MAAK,SAACC,GACdL,GAAMK,EAAIuD,KACVC,MAAM,0BACN7F,EAAc,EACjB,GACJ,GACJ,EA+FmC,6BAMnBD,GAAc,IACX,SAAC,KAAD,CAAM8D,GAAI,EAAV,UACI,SAAC,KAAD,WACI,UAAC,KAAD,YACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAMC,GAAI,EAAGL,UAAU,OAAvB,UACI,SAAC,IAAD,CAAOM,KAAM+B,EAAAA,EAAkB7B,KAAK,WAExC,UAAC,KAAD,CAAMR,UAAU,OAAhB,WACI,UAAC,KAAD,0BAAwBtD,GAAO,kBAA/B,kBACoBF,GAAa,kBADjC,oBAEsBsB,MAEtB,SAAC,KAAD,CACI2C,KAAK,OACLG,MAAO5C,GACP6C,SAAU,SAACC,GAAD,OAAO7C,GAAa6C,EAAEC,OAAOH,MAA7B,UAIR,MAAb9C,IACG,SAAC,KAAD,CAASkC,UAAU,iBAAiBgB,QAAS,WAAQ5B,GAASd,IAAK/B,EAAc,EAAK,EAAtF,kCASxB,UAAC,KAAD,CAAQyD,UAAU,OAAOsC,MAAM,SAASC,UAAQ,EAACtC,MAAO,CAAEuC,YAAa,WAAaC,OAAK,EAACC,YAAU,EAApG,WACI,SAAC,IAAD,CAAYzC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAAxD,UACI,UAAC,KAAD,YACI,SAAC,KAAD,qBACA,SAAC,KAAD,0BACA,SAAC,KAAD,6BACA,SAAC,KAAD,6BACA,SAAC,KAAD,yBACA,SAAC,KAAD,0BACA,SAAC,KAAD,4BACA,SAAC,KAAD,6BACA,SAAC,KAAD,sBACA,SAAC,KAAD,yBAGR,SAAC,KAAD,UACKjC,GAAQyE,UAAU1B,QAAO,SAACC,GAAD,OAAUA,EAAKxD,WAAaA,CAA5B,IAAsC4D,KAAI,SAACjC,EAAMuD,GAAP,OAChE,UAAC,KAAD,YACI,SAAC,KAAD,UAAiBA,EAAQ,KACzB,SAAC,KAAD,UAAiBvD,EAAKwC,aACtB,SAAC,KAAD,UAAiBxC,EAAKyC,gBACtB,SAAC,KAAD,UAAiBzC,EAAK2C,gBACtB,SAAC,KAAD,UAAiB3C,EAAK0C,YACtB,SAAC,KAAD,UAAiBc,IAAOxD,EAAKyD,WAAWC,OAAO,SAC/C,SAAC,KAAD,UAAiB1D,EAAK6C,WACtB,SAAC,KAAD,UAAiB7C,EAAKC,YACtB,SAAC,KAAD,eAAmC0D,IAAlB3D,EAAKC,UAAyB,SAAC,KAAD,CAASa,MAAM,SAASa,QAAS,kBAAM5B,GAASC,EAAK8C,IAApB,EAAjC,wBAAiF,SAAC,KAAD,CAASc,UAAQ,EAAC9C,MAAM,SAASa,QAAS,kBAAM5B,GAASC,EAAK8C,IAApB,EAA1C,0BAChI,UAAC,KAAD,YAAgB,SAAC,MAAD,CAAQlC,MAAO,CAAEiD,OAAQ,UAAWC,YAAa,QAAUnC,QAAS,kBAAMoC,cAAc/D,EAAK8C,IAAzB,EAA+B3B,KAAK,SAAxH,KAAkI,SAAC,MAAD,CAAUP,MAAO,CAAEiD,OAAQ,UAAWC,YAAa,QAAUnC,QAAS,kBAAMoC,cAAc/D,EAAK8C,IAAzB,EAA+B3B,KAAK,SAA5O,SAVYoC,EADgD,cAmB3F,C,wDCrQM,IAAMP,EAAmB,CAAC,UAAU,4f,wDCApC,IAAMb,EAAiB,CAAC,UAAU,2d","sources":["views/forms/StaffCheckIn.js","../node_modules/@coreui/icons/js/free/cil-account-logout.js","../node_modules/@coreui/icons/js/free/cil-check-circle.js"],"sourcesContent":["import { cilAccountLogout, cilCheckCircle, cilFingerprint } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { CButton, CCard, CCardBody, CCardHeader, CCardText, CCol, CFormInput, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { MdDelete, MdEdit } from 'react-icons/md'\r\nimport moment from 'moment/moment'\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst StaffCheckin = () => {\r\n    const [attendance, setAttendance] = useState(0);\r\n    const [attendanceID, setAttendanceID] = useState('');\r\n    const [client, setClient] = useState('');\r\n    const [contact, setContact] = useState('');\r\n    const [centarId, setCentarId] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const time = null;\r\n    const [ctime, setDate] = useState(time);\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const centerCode = user.user.centerCode;\r\n    const [dateIN, setDateIN] = useState()\r\n    const [CheckTime, setCheckTime] = useState()\r\n    const [CheckOutT, setCheckOutT] = useState()\r\n    const [result1, setResult1] = useState([]);\r\n    const [allClient, setAllclient] = useState([]);\r\n    const [id, setId] = useState()\r\n    useEffect(() => {\r\n        getEnquiry()\r\n        getClient()\r\n    }, []);\r\n\r\n    function getEnquiry() {\r\n        axios.get(`${url}/staffAttendance/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setResult1(res.data)\r\n                console.log(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function getClient() {\r\n        axios.get(`${url}/employeeForm/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setAllclient(res.data)\r\n                setClient(res.data.FullName)\r\n                setContact(res.data.ContactNumber)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const handelTime = () => {\r\n        let time = new Date().toLocaleTimeString();\r\n        var currentdate = new Date();\r\n        var date = currentdate.getFullYear() + \"/\" + currentdate.getMonth()\r\n            + \"/\" + currentdate.getDay();\r\n\r\n        let data = {\r\n            username: username, StaffName: client, staffContact: contact, centerId: centerCode, attentanceId: attendanceID, checkDate: dateIN, checkIn: CheckTime\r\n        }\r\n\r\n        fetch(`${url}/staffAttendance/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            resp.json().then((res) => {\r\n                setId(res._id);\r\n                alert(\"successfully submitted\")\r\n                setAttendance(2)\r\n            })\r\n        })\r\n    }\r\n\r\n    const CheckOut = (id) => {\r\n        let time2 = new Date().toLocaleTimeString();\r\n        let item = { checkOut: time2 }\r\n        fetch(`${url}/staffAttendance/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getEnquiry()\r\n            })\r\n        })\r\n    }\r\n\r\n    const submitBtn = () => {\r\n        allClient.filter((list) => list.AttendanceID.includes(attendanceID)).length;\r\n        if (allClient.filter((list) => list.AttendanceID.includes(attendanceID)).length) {\r\n            allClient.filter((list) =>\r\n                list.AttendanceID.includes(attendanceID)\r\n            ).map((data) => (\r\n                setClient(data.FullName),\r\n                setAttendanceID(data.AttendanceID),\r\n                setCentarId(data.CenterID),\r\n                setAttendance(1),\r\n                setStatus(data.status),\r\n                setError('')\r\n            ))\r\n        } else {\r\n            setError('Not Found')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                Staff CheckIn\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CRow>\r\n                    <CCol lg={4}>\r\n                        <CCard>\r\n                            <CCardBody>\r\n                                <label style={{ color: 'red' }}>{error}</label>\r\n                                <CRow>\r\n                                    <CCol xs={5}>\r\n                                        <CIcon icon={cilFingerprint} size=\"8xl\" />\r\n                                    </CCol>\r\n                                    <CCol className='mt-4'>\r\n                                        <CFormInput\r\n                                            type=\"text\"\r\n                                            label='Attendance ID'\r\n                                            placeholder=\"Enter Attendance ID\"\r\n                                            value={attendanceID}\r\n                                            onChange={(e) => setAttendanceID(e.target.value)}\r\n                                        />\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CButton className='mt-1 float-end' onClick={submitBtn}>Submit</CButton>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    {attendance >= 1 &&\r\n                        <CCol lg={4}>\r\n                            <CCard>\r\n                                <CCardBody>\r\n                                    <CRow>\r\n                                        <CCol xs={5}>\r\n\r\n                                            <CIcon icon={cilCheckCircle} size=\"8xl\" />\r\n                                        </CCol>\r\n                                        <CCol className='mt-1'>\r\n                                            <CCardText>Staff Name: {client}<br />\r\n                                                Attendance ID: {attendanceID}<br />\r\n                                                Center ID: {centerCode}<br />\r\n                                                Status: {status ? 'Active' : 'Inactive'}<br />\r\n                                            </CCardText>\r\n                                            <CFormInput\r\n                                                type='date'\r\n                                                value={dateIN}\r\n                                                onChange={(e) => setDateIN(e.target.value)}\r\n                                            />\r\n                                            <CFormInput\r\n                                                type='time'\r\n                                                value={CheckTime}\r\n                                                onChange={(e) => setCheckTime(e.target.value)}\r\n                                            />\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                    {ctime == null &&\r\n                                        <CButton className='mt-1 float-end' onClick={handelTime}>Check In</CButton>\r\n                                    }\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    }\r\n                    {attendance >= 2 &&\r\n                        <CCol lg={4}>\r\n                            <CCard>\r\n                                <CCardBody>\r\n                                    <CRow>\r\n                                        <CCol xs={5} className='mt-2'>\r\n                                            <CIcon icon={cilAccountLogout} size=\"7xl\" />\r\n                                        </CCol>\r\n                                        <CCol className='mt-3'>\r\n                                            <CCardText>Staff Name: {client}<br />\r\n                                                Attendance ID: {attendanceID}<br />\r\n                                                Attendance Time: {CheckTime}\r\n                                            </CCardText>\r\n                                            <CFormInput\r\n                                                type='time'\r\n                                                value={CheckOutT}\r\n                                                onChange={(e) => setCheckOutT(e.target.value)}\r\n                                            />\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                    {CheckTime != null &&\r\n                                        <CButton className='mt-1 float-end' onClick={() => { CheckOut(id); setAttendance(0); }}>Check Out</CButton>\r\n                                    }\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    }\r\n                </CRow>\r\n\r\n\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Staff Name</CTableHeaderCell>\r\n                            <CTableHeaderCell>Staff Contact</CTableHeaderCell>\r\n                            <CTableHeaderCell>Attendance ID</CTableHeaderCell>\r\n                            <CTableHeaderCell>Center ID</CTableHeaderCell>\r\n                            <CTableHeaderCell>Check Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>CheckIn Time</CTableHeaderCell>\r\n                            <CTableHeaderCell>CheckOut Time</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                            <CTableHeaderCell>Edit</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.reverse().filter((list) => list.username === username).map((item, index) => (\r\n                            <CTableRow key={index}>\r\n                                <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                <CTableDataCell>{item.StaffName}</CTableDataCell>\r\n                                <CTableDataCell>{item.staffContact}</CTableDataCell>\r\n                                <CTableDataCell>{item.attentanceId}</CTableDataCell>\r\n                                <CTableDataCell>{item.centerId}</CTableDataCell>\r\n                                <CTableDataCell>{moment(item.createdAt).format(\"LL\")}</CTableDataCell>\r\n                                <CTableDataCell>{item.checkIn}</CTableDataCell>\r\n                                <CTableDataCell>{item.checkOut}</CTableDataCell>\r\n                                <CTableDataCell>{item.checkOut === undefined ? <CButton color='danger' onClick={() => CheckOut(item._id)}>Check Out</CButton> : <CButton disabled color='danger' onClick={() => CheckOut(item._id)}>Check Out</CButton>}</CTableDataCell>\r\n                                <CTableDataCell><MdEdit style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteEnquiry(item._id)} size='20px' /> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteEnquiry(item._id)} size='20px' /> </CTableDataCell>\r\n                            </CTableRow>\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n        </CCard>\r\n    )\r\n}\r\n\r\nexport default StaffCheckin\r\n","export const cilAccountLogout = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='77.155 272.034 351.75 272.034 351.75 272.033 351.75 240.034 351.75 240.033 77.155 240.033 152.208 164.98 152.208 164.98 152.208 164.979 129.58 142.353 15.899 256.033 15.9 256.034 15.899 256.034 129.58 369.715 152.208 347.088 152.208 347.087 152.208 347.087 77.155 272.034' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='160 16 160 48 464 48 464 464 160 464 160 496 496 496 496 16 160 16' class='ci-primary'/>\"]","export const cilCheckCircle = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M426.072,86.928A238.75,238.75,0,0,0,88.428,424.572,238.75,238.75,0,0,0,426.072,86.928ZM257.25,462.5c-114,0-206.75-92.748-206.75-206.75S143.248,49,257.25,49,464,141.748,464,255.75,371.252,462.5,257.25,462.5Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='221.27 305.808 147.857 232.396 125.23 255.023 221.27 351.063 388.77 183.564 366.142 160.937 221.27 305.808' class='ci-primary'/>\"]"],"names":["url","useState","attendance","setAttendance","attendanceID","setAttendanceID","client","setClient","contact","setContact","setCentarId","status","setStatus","error","setError","ctime","user","JSON","parse","localStorage","getItem","token","username","centerCode","dateIN","setDateIN","CheckTime","setCheckTime","CheckOutT","setCheckOutT","result1","setResult1","allClient","setAllclient","id","setId","getEnquiry","axios","headers","then","res","data","console","log","catch","useEffect","FullName","ContactNumber","CheckOut","item","checkOut","Date","toLocaleTimeString","fetch","method","body","stringify","result","json","resp","className","style","backgroundColor","color","lg","xs","icon","cilFingerprint","size","type","label","placeholder","value","onChange","e","target","onClick","filter","list","AttendanceID","includes","length","map","CenterID","cilCheckCircle","currentdate","getFullYear","getMonth","getDay","StaffName","staffContact","centerId","attentanceId","checkDate","checkIn","_id","alert","cilAccountLogout","align","bordered","borderColor","hover","responsive","reverse","index","moment","createdAt","format","undefined","disabled","cursor","markerStart","deleteEnquiry"],"sourceRoot":""}