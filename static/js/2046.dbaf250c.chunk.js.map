{"version":3,"file":"static/js/2046.dbaf250c.chunk.js","mappings":"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","sources":["views/Master/HRMaster/HRPolicy.js"],"sourcesContent":["import { cilArrowCircleTop } from \"@coreui/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CFormTextarea,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst HRPolicy = () => {\r\n    const [action, setAction] = useState(false)\r\n    const [Title, setTitle] = useState('')\r\n    const [Policy, setPolicy] = useState('')\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getPolicy()\r\n    }, []);\r\n\r\n    function getPolicy() {\r\n        axios.get(`${url}/hrPolicyMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createPolicy() {\r\n        if (Title != '' && Policy != '') {\r\n            const data = {\r\n                username: username,\r\n                Title, Policy,\r\n            }\r\n            axios.post(`${url}/hrPolicyMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getPolicy()\r\n                    setAction(false)\r\n                    setTitle('')\r\n                    setPolicy('')\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter lead Source')\r\n        }\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/hrPolicyMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getPolicy()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className=\"mb-3 border-success\">\r\n                    <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                        <CCardTitle className=\"mt-2\">HR Policy Master</CCardTitle>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div></div>\r\n                            <div>\r\n                                <CRow>\r\n                                    <CCol>\r\n                                        <CButton className=\"ms-1 mt-2\" onClick={() => setAction(!action)}>{action ? 'Close' : 'Add Policy'}</CButton>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </div>\r\n                        </div>\r\n                        {action &&\r\n                            <div>\r\n\r\n                                <CRow className='d-flex mb-2'>\r\n                                    <CCol lg={12} sm={12} className='mb-2'>\r\n                                        <CFormInput\r\n                                            type='text'\r\n                                            placeholder=\"Title\"\r\n                                            value={Title}\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                            label=\"Title\"\r\n                                            aria-label=\"Recipient's username\"\r\n                                            aria-describedby=\"button-addon2\"\r\n                                        />\r\n                                    </CCol>\r\n                                    <CCol lg={12} sm={12} className='mb-2'>\r\n                                        <CFormTextarea\r\n                                            id=\"exampleFormControlTextarea1\"\r\n                                            placeholder='Enter Policy'\r\n                                            value={Policy}\r\n                                            onChange={(e) => setPolicy(e.target.value)}\r\n                                            label=\"Policy\"\r\n                                            rows=\"5\"\r\n                                            text=\"Must be 8-20 words long.\"\r\n                                        ></CFormTextarea>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CButton type=\"button\" color=\"primary\" onClick={() => createPolicy()}>\r\n                                    Save\r\n                                </CButton>\r\n                            </div>\r\n                        }\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sno.</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Title</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Policy</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Action</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n\r\n                                {result1.slice(paging * 10, paging * 10 + 10).filter((list) =>\r\n                                    list.username === username).map((item, index) => (\r\n                                        <CTableRow key={index}>\r\n                                            <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                            <CTableDataCell>{item.Title}</CTableDataCell>\r\n                                            <CTableDataCell>{item.Policy}</CTableDataCell>\r\n                                            <CTableDataCell> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} size='20px' onClick={() => deleteData(item._id)} /> </CTableDataCell>\r\n                                        </CTableRow>\r\n\r\n                                    ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                    <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                        <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </CPaginationItem>\r\n                        <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                        {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                        {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                        {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                            <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                            : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                        }\r\n                    </CPagination>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default HRPolicy\r\n"],"names":["url","useState","action","setAction","Title","setTitle","Policy","setPolicy","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","headers","getPolicy","axios","then","res","console","log","data","reverse","catch","error","useEffect","lg","sm","className","style","backgroundColor","color","onClick","type","placeholder","value","onChange","e","target","label","id","rows","text","resp","alert","createPolicy","align","bordered","borderColor","hover","responsive","slice","filter","list","map","item","index","cursor","markerStart","size","_id","confirm","fetch","method","result","json","warn","disabled","active","length"],"sourceRoot":""}