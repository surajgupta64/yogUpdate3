{"version":3,"file":"static/js/2004.e04eea28.chunk.js","mappings":"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","sources":["views/Master/HRMaster/Designation.js"],"sourcesContent":["import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst ServiceMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [jobDesignation, setJobDesignation] = useState(\"\")\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [vacancy, setVacancy] = useState(\"\")\r\n    const [status, setStatus] = useState(false)\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n    useEffect(() => {\r\n        getDesignation()\r\n    }, []);\r\n\r\n    function getDesignation() {\r\n        axios.get(`${url}/designation/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    function deleteDesignation(id) {\r\n\r\n        if (confirm('Do you want to delete this')) {\r\n            fetch(`${url}/designation/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getDesignation()\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const updateStatus2 = (id, status) => {\r\n        let item = { status: status }\r\n        fetch(`${url}/designation/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getDesignation()\r\n            })\r\n        })\r\n    }\r\n\r\n    const saveDesignation = () => {\r\n        let data = { username: username, jobDesignation: jobDesignation, department: department, availableVacancy: vacancy, status }\r\n        // console.warn(data);\r\n        fetch(`${url}/designation/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            // console.warn(\"resp\",resp);;\r\n            resp.json().then(() => {\r\n                setStatus(false)\r\n                setJobDesignation('')\r\n                setDepartment('')\r\n                setVacancy('')\r\n                alert(\"successfully submitted\")\r\n            })\r\n        })\r\n    }\r\n\r\n    const subserviceClose = () => {\r\n        setAction1(!action1)\r\n        setStatus(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Designation Master</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm className=\"mb-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div></div>\r\n                        <div>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CButton className=\"ms-1 mt-2\" onClick={subserviceClose}>{action1 ? 'close' : 'Add Vacancy'}</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    </div>\r\n                    {action1 &&\r\n                        <div>\r\n                            <CRow className='mt-3'>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Job Designation Name\"\r\n                                        value={jobDesignation}\r\n                                        onChange={(e) => setJobDesignation(e.target.value)}\r\n                                        placeholder=\"Enter Job Designation\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Job Department Name\"\r\n                                        value={department}\r\n                                        onChange={(e) => setDepartment(e.target.value)}\r\n                                        placeholder=\"Enter Job Department\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"number\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Available Vacancy\"\r\n                                        value={vacancy}\r\n                                        onChange={(e) => setVacancy(e.target.value)}\r\n                                        placeholder=\"No of Vacancy\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol className=\"mt-2\" lg={6} md={6} sm={12}>\r\n                                    <CFormSwitch size=\"xl\" label=\"Status\" value={status} onChange={() => setStatus(!status)} style={{ defaultChecked: 'false' }} />\r\n\r\n                                    <CButton className=\"mt-2\" onClick={saveDesignation}>Save</CButton>\r\n                                </CCol>\r\n\r\n\r\n                            </CRow>\r\n                        </div>\r\n                    }\r\n                </CForm>\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Job Designation</CTableHeaderCell>\r\n                            <CTableHeaderCell>Department</CTableHeaderCell>\r\n                            <CTableHeaderCell>Available Vacancy</CTableHeaderCell>\r\n                            <CTableHeaderCell>Status</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.slice(paging * 10, paging * 10 + 10).map((item, index) => (\r\n                            item.username === username && (\r\n                                <CTableRow key={index}>\r\n                                    <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                    <CTableDataCell>{item.jobDesignation}</CTableDataCell>\r\n                                    <CTableDataCell>{item.department}</CTableDataCell>\r\n                                    <CTableDataCell>{item.availableVacancy}</CTableDataCell>\r\n                                    <CTableDataCell><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.status} checked={item.status} onChange={() => updateStatus2(item._id, !item.status)} /></CTableDataCell>\r\n                                    <CTableDataCell><MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteDesignation(item._id)} size='20px' /> </CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n            <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                </CPaginationItem>\r\n                <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                    <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                    : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </CPaginationItem>\r\n                }\r\n            </CPagination>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default ServiceMaster;"],"names":["url","useState","action1","setAction1","jobDesignation","setJobDesignation","department","setDepartment","vacancy","setVacancy","status","setStatus","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","getDesignation","axios","headers","then","res","data","reverse","catch","error","console","useEffect","className","style","backgroundColor","color","onClick","lg","md","sm","type","id","label","value","onChange","e","target","placeholder","size","defaultChecked","availableVacancy","fetch","method","body","stringify","resp","json","alert","align","bordered","borderColor","hover","responsive","slice","map","item","index","cursor","_id","checked","result","updateStatus2","markerStart","confirm","warn","disabled","active","filter","list","length"],"sourceRoot":""}