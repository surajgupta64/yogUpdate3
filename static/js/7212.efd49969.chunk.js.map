{"version":3,"file":"static/js/7212.efd49969.chunk.js","mappings":"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","sources":["views/marketing/OfferMarketing.js"],"sourcesContent":["import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\n\r\nconst OfferMarketing = () => {\r\n    const [action, setAction] = useState(false)\r\n    const [ServiceName, setServiceName] = useState(\"\");\r\n    const [ServiceDuration, setServiceDuration] = useState(\"\");\r\n    const [ServiceVariation, setServiceVariation] = useState(\"\");\r\n    const [ServiceFees, setServiceFees] = useState(\"\");\r\n    const [DealName, setDealName] = useState(\"\");\r\n    const [StartDate, setStartDate] = useState(\"\");\r\n    const [EndDate, setEndDate] = useState(\"\");\r\n    const [Discount, setDiscount] = useState(\"\");\r\n    const [NetFees, setNetFees] = useState(\"\");\r\n    const [status, setStatus] = useState(false);\r\n    const url = 'https://yog-api.herokuapp.com'\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [result, setResult] = useState([]);\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getOffer()\r\n        getService()\r\n    }, []);\r\n\r\n    function getOffer() {\r\n        axios.get(`${url}/offer/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function getService() {\r\n        axios.get(`${url}/subservice/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createOffer() {\r\n        if (DealName != '' && ServiceName != '' && ServiceVariation != '' && ServiceDuration != '' && ServiceFees != \"\"\r\n            && StartDate != '' && EndDate != '' && NetFees != '' && Discount != ''\r\n        ) {\r\n            const data = {\r\n                username: username,\r\n                ServiceName: ServiceName,\r\n                ServiceVariation: ServiceVariation,\r\n                duration: ServiceDuration,\r\n                fees: ServiceFees,\r\n                dealName: DealName,\r\n                startDate: StartDate,\r\n                endDate: EndDate,\r\n                discount: Discount,\r\n                netfees: NetFees,\r\n                status: status\r\n            }\r\n            axios.post(`${url}/offer/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getOffer()\r\n                    setAction(false)\r\n\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter all details')\r\n        }\r\n    }\r\n\r\n    const updateStatus = (id, status) => {\r\n        let item = { Status: status }\r\n        fetch(`${url}/offer/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getOffer()\r\n            })\r\n        })\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/offer/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getOffer()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Offer Master</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm className=\"mb-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CButton className=\"ms-1 mt-2\" onClick={() => setAction(!action)}>{action ? 'close' : 'Add New Offer'}</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    </div>\r\n                    {action &&\r\n                        <div>\r\n                            <CRow className='mt-3'>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormSelect\r\n                                        className=\"mb-1\"\r\n                                        aria-label=\"Select General Trainer\"\r\n                                        value={ServiceName}\r\n                                        onChange={(e) => setServiceName(e.target.value)}\r\n                                        label=\"Service Name\"\r\n                                    >\r\n                                        <option>Select Service</option>\r\n                                        {result.filter((list) => list.username === username)\r\n                                            .map((item, index) => (\r\n                                                <option key={index}>{item.selected_service}</option>\r\n                                            ))}\r\n                                    </CFormSelect>\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormSelect\r\n                                        className=\"mb-1\"\r\n                                        aria-label=\"Select General Trainer\"\r\n                                        value={ServiceVariation}\r\n                                        onChange={(e) => setServiceVariation(e.target.value)}\r\n                                        label=\"Service Variations\"\r\n                                    >\r\n                                        <option>Select Variations</option>\r\n                                        {result.filter((list) => list.username === username && list.selected_service === ServiceName)\r\n                                            .map((item, index) => (\r\n                                                <option key={index}>{item.sub_Service_Name}</option>\r\n                                            ))}\r\n                                    </CFormSelect>\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormSelect\r\n                                        className=\"mb-1\"\r\n                                        aria-label=\"Select General Trainer\"\r\n                                        value={ServiceDuration}\r\n                                        onChange={(e) => setServiceDuration(e.target.value)}\r\n                                        label=\"Service Duration\"\r\n                                    >\r\n                                        <option>Select Duration</option>\r\n                                        {result.filter((list) => list.username === username && list.selected_service === ServiceName && list.sub_Service_Name === ServiceVariation)\r\n                                            .map((item, index) => (\r\n                                                <option key={index}>{item.duration}</option>\r\n                                            ))}\r\n                                    </CFormSelect>\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormSelect\r\n                                        className=\"mb-1\"\r\n                                        aria-label=\"Select General Trainer\"\r\n                                        value={ServiceFees}\r\n                                        onChange={(e) => setServiceFees(e.target.value)}\r\n                                        label=\"Service Duration\"\r\n                                    >\r\n                                        <option>Select Fees</option>\r\n                                        {result.filter((list) => list.username === username && list.selected_service === ServiceName && list.sub_Service_Name === ServiceVariation)\r\n                                            .map((item, index) => (\r\n                                                <option key={index}>{item.fees}</option>\r\n                                            ))}\r\n                                    </CFormSelect>\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Deal Name\"\r\n                                        value={DealName}\r\n                                        onChange={(e) => setDealName(e.target.value)}\r\n                                        placeholder=\"Enter Deal Name\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"date\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Start Date\"\r\n                                        value={StartDate}\r\n                                        onChange={(e) => setStartDate(e.target.value)}\r\n                                        placeholder=\"Enter Start Date\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"date\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"End Date\"\r\n                                        value={EndDate}\r\n                                        onChange={(e) => setEndDate(e.target.value)}\r\n                                        placeholder=\"Enter End Date\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"number\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Discount\"\r\n                                        value={Discount}\r\n                                        onChange={(e) => { setDiscount(e.target.value), setNetFees(ServiceFees - (ServiceFees / 100 * Discount)) }}\r\n                                        placeholder=\"Enter Discount\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Net Fees\"\r\n                                        value={NetFees}\r\n                                        placeholder=\"Enter Discount\"\r\n                                    />\r\n                                </CCol>\r\n                            </CRow>\r\n\r\n                            <CFormSwitch size=\"xl\" label=\"Status\" style={{ defaultChecked: 'false' }}\r\n                                value={status}\r\n                                onChange={() => setStatus(!status)} />\r\n                            <CButton className=\"mt-2\" onClick={() => createOffer()}>Save</CButton>\r\n                        </div>\r\n                    }\r\n                </CForm>\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>Service</CTableHeaderCell>\r\n                            <CTableHeaderCell>Deal Name</CTableHeaderCell>\r\n                            <CTableHeaderCell>Start Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>End Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>Services Variation</CTableHeaderCell>\r\n                            <CTableHeaderCell>Services Duration</CTableHeaderCell>\r\n                            <CTableHeaderCell>Services Fee</CTableHeaderCell>\r\n                            <CTableHeaderCell>Discount Rate</CTableHeaderCell>\r\n                            <CTableHeaderCell>Discount Value</CTableHeaderCell>\r\n                            <CTableHeaderCell>Status</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.filter((list) => list.username === username).map((item, index) => (\r\n                            <CTableRow key={index}>\r\n                                <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                <CTableDataCell>{moment(item.createdAt).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                <CTableDataCell>{item.ServiceName}</CTableDataCell>\r\n                                <CTableDataCell>{item.dealName}</CTableDataCell>\r\n                                <CTableDataCell>{moment(item.startDate).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                <CTableDataCell>{moment(item.endDate).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                <CTableDataCell>{item.ServiceVariation}</CTableDataCell>\r\n                                <CTableDataCell>{item.duration}</CTableDataCell>\r\n                                <CTableDataCell>{item.fees}</CTableDataCell>\r\n                                <CTableDataCell>{item.discount}%</CTableDataCell>\r\n                                <CTableDataCell>{item.fees - (item.fees / 100 * item.discount)}</CTableDataCell>\r\n                                <CTableDataCell><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.status} checked={item.status} onChange={() => updateStatus(item._id, !item.status)} /></CTableDataCell>\r\n                                <CTableDataCell><MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} size='20px' onClick={() => deleteData(item._id)} /> </CTableDataCell>\r\n                            </CTableRow>\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n        </CCard >\r\n    );\r\n};\r\n\r\nexport default OfferMarketing;"],"names":["useState","action","setAction","ServiceName","setServiceName","ServiceDuration","setServiceDuration","ServiceVariation","setServiceVariation","ServiceFees","setServiceFees","DealName","setDealName","StartDate","setStartDate","EndDate","setEndDate","Discount","setDiscount","NetFees","setNetFees","status","setStatus","url","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","result","setResult","headers","getOffer","axios","then","res","console","log","data","catch","error","useEffect","className","style","backgroundColor","color","onClick","lg","md","sm","value","onChange","e","target","label","filter","list","map","item","index","selected_service","sub_Service_Name","duration","fees","type","id","placeholder","size","defaultChecked","dealName","startDate","endDate","discount","netfees","resp","alert","createOffer","align","bordered","borderColor","hover","responsive","moment","createdAt","format","cursor","_id","checked","Status","fetch","method","body","stringify","json","updateStatus","markerStart","confirm","warn"],"sourceRoot":""}