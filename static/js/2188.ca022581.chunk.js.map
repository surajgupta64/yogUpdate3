{"version":3,"file":"static/js/2188.ca022581.chunk.js","mappings":"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","sources":["views/leads/FollowupsCallReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormTextarea,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from '@coreui/react'\r\nimport axios from 'axios';\r\nimport { MdCall, MdDelete, MdEdit, MdMail } from 'react-icons/md';\r\nimport { BsPlusCircle, BsWhatsapp } from 'react-icons/bs';\r\nimport moment from 'moment';\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst FollowupCallReport = () => {\r\n    const [visible, setVisible] = useState(false)\r\n    const [edit, setEdit] = useState()\r\n    const [visible1, setVisible1] = useState(false)\r\n    const [Search1, setSearch1] = useState('')\r\n    const [Search2, setSearch2] = useState('')\r\n    const [Search3, setSearch3] = useState('')\r\n    const [Search4, setSearch4] = useState('')\r\n    const [Search5, setSearch5] = useState('')\r\n    const [Search6, setSearch6] = useState('')\r\n    const [Search7, setSearch7] = useState('')\r\n    const [Search8, setSearch8] = useState('')\r\n    const [Search9, setSearch9] = useState('')\r\n    const [Search10, setSearch10] = useState('')\r\n    const [followForm, setFollowForm] = useState()\r\n    const [callReport, setCallReport] = useState(false)\r\n\r\n    const [Name, setName] = useState(\"\");\r\n    const [Contact, setContact] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [ServiceName1, setServiceName1] = useState(\"\");\r\n    const [CallStatus1, setCallStatus1] = useState(\"\");\r\n    const [enquiryStage, setEnquiryStage] = useState('')\r\n    const [FollowupDate, setFollowupDate] = useState(\"\");\r\n    const [appointmentDate, setappointmentDate] = useState(\"\");\r\n    const [appointmentTime, setappointmentTime] = useState(\"\");\r\n    const [TimeFollowp, setTimeFollowp] = useState(\"\");\r\n    const [Discussion, setDiscussion] = useState(\"\");\r\n    const [Counseller, setCounseller] = useState(\"\");\r\n    const [updateItem, setUpdateItem] = useState();\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const centerCode = user.user.centerCode;\r\n    const [result, setResult] = useState([]);\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n\r\n    const [pros, setPros] = useState([])\r\n    useEffect(() => {\r\n        getEnquiry()\r\n        getStaff()\r\n        axios.get(`${url}/prospect/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.warn(res.data.filter((list) => list.status === \"prospect\"))\r\n                setPros(res.data.filter((list) => list.status === \"prospect\"))\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n        axios.get(`${url}/subservice/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }, []);\r\n    const [staff, setStaff] = useState([])\r\n    function getStaff() {\r\n        axios.get(`${url2}/employeeForm/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setStaff(res.data)\r\n                console.log(res.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const saveProspect = () => {\r\n        if (enquiryStage === 'Appointment') {\r\n            const data1 = { appointmentDate, appointmentTime, appointmentfor: 'Appointment', Counseller: Counseller }\r\n\r\n            fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data1)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    alert(\"successfully submitted\")\r\n                    setVisible(false)\r\n                })\r\n            })\r\n\r\n        } else if (enquiryStage === 'Trial Session') {\r\n            const data1 = { appointmentDate, appointmentTime, appointmentfor: 'Trial Session', Counseller: Counseller }\r\n\r\n            fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data1)\r\n            }).then((resp) => {\r\n                resp.json().then(() => {\r\n                    alert(\"successfully submitted\")\r\n                    setVisible(false)\r\n                })\r\n            })\r\n        } else if (enquiryStage === 'Join') {\r\n            handleAdmission(followForm)\r\n            setVisible(false)\r\n        } else if (enquiryStage === 'Prospect') {\r\n            var currentdate = new Date();\r\n            var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n                + \"-\" + currentdate.getFullYear();\r\n            var time =\r\n                + currentdate.getHours() + \":\"\r\n                + currentdate.getMinutes();\r\n            let data = {\r\n                username: username,\r\n                EnquiryID: followForm, CallDate: date, Time: time,\r\n                Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, AppointmentDate: appointmentDate, AppointmentTime: appointmentTime, enquiryStage: enquiryStage, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                status: 'prospect'\r\n            }\r\n            if (pros.filter((list) => list.EnquiryID === followForm).length > 0) {\r\n                const found = pros.filter((list) => list.EnquiryID === followForm).map((element, index) => {\r\n                    return index === 0 && element._id;\r\n                });\r\n                fetch(`${url}/prospect/update/${found[0]}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n\r\n                const data1 = { Counseller }\r\n\r\n                fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data1)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        alert(\"successfully submitted\")\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n            } else if (enquiryStage === 'Not Interested') {\r\n                const data1 = { CallStatus: \"Cold\", Counseller: Counseller }\r\n                let data2 = {\r\n                    username: username,\r\n                    EnquiryID: followForm, CallDate: date, Time: time,\r\n                    Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, enquiryStage: enquiryStage, CallStatus: \"Cold\", FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n                    status: 'CallReport'\r\n                }\r\n\r\n                fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data1)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        alert(\"successfully submitted\")\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n\r\n                fetch(`${url}/prospect/create`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data2)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        setCallReport(false)\r\n                    })\r\n                })\r\n            } else {\r\n                fetch(`${url}/prospect/create`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n\r\n                const data1 = { Counseller, CallStatus: CallStatus1, Discussion: Discussion, }\r\n\r\n                fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data1)\r\n                }).then((resp) => {\r\n                    resp.json().then(() => {\r\n                        alert(\"successfully submitted\")\r\n                        setVisible(false)\r\n                    })\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const updateProspect = () => {\r\n        var currentdate = new Date();\r\n        var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n            + \"-\" + currentdate.getFullYear();\r\n        var time =\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n        let data = {\r\n            EnquiryID: followForm, CallDate: date, Time: time,\r\n            Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n        }\r\n\r\n        fetch(`${url}/prospect/update/${edit}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n\r\n                alert(\"successfully submitted\")\r\n                setVisible(false)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n    function getEnquiry() {\r\n        axios.get(`${url}/prospect/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.filter((list) => list.username === username).reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    console.log(result1);\r\n\r\n    function getProspect(id) {\r\n        axios.get(`${url}/enquiryForm/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setUpdateItem(res.data)\r\n                setName(res.data.Fullname)\r\n                setContact(res.data.ContactNumber)\r\n                setServiceName1(res.data.ServiceName)\r\n                setCallStatus1(res.data.CallStatus)\r\n                setEmail(res.data.Emailaddress)\r\n                setVisible(true)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    function getUpdate(id) {\r\n        axios.get(`${url}/prospect/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setUpdateItem(res.data)\r\n                setName(res.data.Name)\r\n                setContact(res.data.Contact)\r\n                setServiceName1(res.data.ServiceName)\r\n                setCallStatus1(res.data.CallStatus)\r\n                setEmail(res.data.Email)\r\n                setFollowupDate(moment(res.data.FollowupDate).utc().format('YYYY-MM-DD'))\r\n                setCounseller(res.data.Counseller)\r\n                setDiscussion(res.data.Discussion)\r\n                setVisible1(true)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function deleteProspect(id) {\r\n        if (confirm('Do you want to delete this')) {\r\n            fetch(`${url}/prospect/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getEnquiry()\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const saveCallReport = () => {\r\n        var currentdate = new Date();\r\n        var date = currentdate.getDay() + \"-\" + currentdate.getMonth()\r\n            + \"-\" + currentdate.getFullYear();\r\n        var time =\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n        let data = {\r\n            username: username,\r\n            EnquiryID: followForm, CallDate: date, Time: time,\r\n            Name: Name, Contact: Contact, Email: email, ServiceName: ServiceName1, CallStatus: CallStatus1, FollowupDate: FollowupDate, TimeFollowp: TimeFollowp, Counseller: Counseller, Discussion: Discussion,\r\n            status: 'CallReport'\r\n        }\r\n\r\n        fetch(`${url}/prospect/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n                setVisible(false)\r\n            })\r\n        })\r\n        const data1 = { Counseller }\r\n\r\n        fetch(`${url}/enquiryForm/update/${followForm}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data1)\r\n        }).then((resp) => {\r\n            resp.json().then(() => {\r\n                alert(\"successfully submitted\")\r\n                setVisible(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    function getCallReport(id) {\r\n        axios.get(`${url}/enquiryForm/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setUpdateItem(res.data)\r\n                setName(res.data.Fullname)\r\n                setContact(res.data.ContactNumber)\r\n                setServiceName1(res.data.ServiceName)\r\n                setCallStatus1(res.data.CallStatus)\r\n                setEmail(res.data.Emailaddress)\r\n                setCallReport(true)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    const handleCallReport = (id) => {\r\n        setFollowForm(id)\r\n        getCallReport(id)\r\n    }\r\n\r\n\r\n    const handleFollowup = (id) => {\r\n        setFollowForm(id)\r\n        getProspect(id)\r\n    }\r\n\r\n    function handleEnquiry(id) {\r\n        setEdit(id)\r\n        getUpdate(id)\r\n    }\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className='mb-3 border-top-success border-top-3'>\r\n                    <CCardHeader>\r\n                        <strong className=\"mt-2\">Call Report <span className='float-end'>Total Call Report : {result1.filter((list) =>\r\n                            list.username === username && list.status === 'CallReport'\r\n                        ).length}</span></strong>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <div className='d-flex justify-content-between mb-2'>\r\n                            <CInputGroup style={{ width: \"500px\" }}>\r\n\r\n                                <CInputGroupText\r\n                                    component=\"label\"\r\n                                    htmlFor=\"inputGroupSelect01\"\r\n                                >\r\n                                    Form\r\n                                </CInputGroupText>\r\n                                <CFormInput\r\n                                    type=\"date\"\r\n                                    required\r\n                                /><CInputGroupText\r\n                                    component=\"label\"\r\n                                    htmlFor=\"inputGroupSelect01\"\r\n                                >\r\n                                    To\r\n                                </CInputGroupText>\r\n                                <CFormInput\r\n                                    type=\"date\"\r\n                                    required\r\n                                />\r\n                                <CButton type=\"button\" color=\"primary\">\r\n                                    Go\r\n                                </CButton>\r\n                            </CInputGroup>\r\n\r\n                        </div>\r\n                        <div className='d-flex justify-content-between mb-2'>\r\n                            <div className='d-flex justify-content-between float-end'>\r\n                                <CButtonGroup style={{ fontSize: '11px' }} role=\"group\" aria-label=\"Basic example\">\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Scheduled: 0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Attented: 0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Rescheduled:0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Prospect: 0</CButton>\r\n                                    <CButton style={{ fontSize: '11px' }} color=\"dark\" variant=\"outline\">Missed: 0</CButton>\r\n                                </CButtonGroup>\r\n                            </div>\r\n                        </div>\r\n                        <CModal size='lg' style={{ border: '2px solid #0B5345' }} visible={callReport} color='' onClose={() => setCallReport(false)} >\r\n                            <CModalHeader  >\r\n                                <CModalTitle>Call Report</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <CForm >\r\n                                    <CRow>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Name\"\r\n                                                value={Name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"Enter Name\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"email\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Email Address\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                                placeholder=\"name@example.com\"\r\n                                                aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"number\"\r\n                                                value={Contact}\r\n                                                onChange={(e) => setContact(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Contact No\"\r\n                                                placeholder=\"Enter Number\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={6} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Service Name\"\r\n                                                value={ServiceName1}\r\n                                                onChange={(e) => setServiceName1(e.target.value)}\r\n                                                label=\"Service Name\"\r\n\r\n                                            >\r\n                                                <option>Select Service</option>\r\n                                                {result.map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        item.status === true && (\r\n                                                            <option key={index} value={item.id}>{item.selected_service}</option>\r\n                                                        )\r\n                                                    )\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Assign Staff\"\r\n                                                value={Counseller}\r\n                                                onChange={(e) => setCounseller(e.target.value)}\r\n                                                label='Counseller'\r\n                                            >\r\n                                                <option>Select Counseller</option>\r\n                                                {staff.filter((list) => list.username === username && list.selected === 'Select').map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        <option key={index}>{item.FullName}</option>\r\n                                                    )\r\n                                                ))}</CFormSelect>\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={CallStatus1}\r\n                                                onChange={(e) => setCallStatus1(e.target.value)}\r\n                                                label=\"Call Status\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Cold\", value: \"Cold\" },\r\n                                                    { label: \"Warm\", value: \"Warm\" },\r\n                                                    { label: \"Hot\", value: \"Hot\" },\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                label=\"FollowUp Date\"\r\n                                                type=\"date\"\r\n                                                value={FollowupDate}\r\n                                                onChange={(e) => setFollowupDate(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                label=\"FollowUp Time\"\r\n                                                type=\"time\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                value={TimeFollowp}\r\n                                                onChange={(e) => setTimeFollowp(e.target.value)}\r\n\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol>\r\n                                            <CFormTextarea\r\n                                                id=\"exampleFormControlTextarea1\"\r\n                                                label=\"Discussion\"\r\n                                                value={Discussion}\r\n                                                onChange={(e) => setDiscussion(e.target.value)}\r\n                                                rows=\"2\"\r\n                                                text=\"Must be 8-20 words long.\"\r\n                                            ></CFormTextarea>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                </CForm>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton color=\"secondary\" onClick={() => setCallReport(false)}>\r\n                                    Close\r\n                                </CButton>\r\n                                <CButton type='submit' color=\"primary\" onClick={() => saveCallReport()}>Save Call Report</CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n                        <CModal size='lg' style={{ border: '2px solid #0B5345' }} visible={visible} color='' onClose={() => setVisible(false)} >\r\n                            <CModalHeader  >\r\n                                <CModalTitle>Prospect Form</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <CForm >\r\n                                    <CRow>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Name\"\r\n                                                value={Name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"Enter Name\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"email\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Email Address\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                                placeholder=\"name@example.com\"\r\n                                                aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"number\"\r\n                                                value={Contact}\r\n                                                onChange={(e) => setContact(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Contact No\"\r\n                                                placeholder=\"Enter Number\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Service Name\"\r\n                                                value={ServiceName1}\r\n                                                onChange={(e) => setServiceName1(e.target.value)}\r\n                                                label=\"Service Name\"\r\n\r\n                                            >\r\n                                                <option>Select Service</option>\r\n                                                {result.map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        item.status === true && (\r\n                                                            <option key={index} value={item.id}>{item.selected_service}</option>\r\n                                                        )\r\n                                                    )\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Assign Staff\"\r\n                                                value={Counseller}\r\n                                                onChange={(e) => setCounseller(e.target.value)}\r\n                                                label='Counseller'\r\n                                            >\r\n                                                <option>Select Counseller</option>\r\n                                                {staff.filter((list) => list.username === username && list.selected === 'Select').map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        <option key={index}>{item.FullName}</option>\r\n                                                    )\r\n                                                ))}</CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={enquiryStage}\r\n                                                onChange={(e) => setEnquiryStage(e.target.value)}\r\n                                                label=\"Prospect Stage\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Appointment\", value: \"Appointment\" },\r\n                                                    { label: \"Trial Session\", value: \"Trial Session\" },\r\n                                                    { label: \"Join\", value: \"Join\" },\r\n                                                    { label: 'Prospect', value: 'Prospect' }\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        {(enquiryStage === 'Appointment') &&\r\n                                            <>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Appointment Date\"\r\n                                                        type=\"date\"\r\n                                                        value={appointmentDate}\r\n                                                        onChange={(e) => setappointmentDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Appointment Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={appointmentTime}\r\n                                                        onChange={(e) => setappointmentTime(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        {(enquiryStage === 'Trial Session') &&\r\n                                            <>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Trial Date\"\r\n                                                        type=\"date\"\r\n                                                        value={appointmentDate}\r\n                                                        onChange={(e) => setappointmentDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"Trial Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={appointmentTime}\r\n                                                        onChange={(e) => setappointmentTime(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={CallStatus1}\r\n                                                onChange={(e) => setCallStatus1(e.target.value)}\r\n                                                label=\"Call Status\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Cold\", value: \"Cold\" },\r\n                                                    { label: \"Warm\", value: \"Warm\" },\r\n                                                    { label: \"Hot\", value: \"Hot\" },\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n                                        {(enquiryStage === 'Prospect') &&\r\n                                            <>\r\n\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"FollowUp Date\"\r\n                                                        type=\"date\"\r\n                                                        value={FollowupDate}\r\n                                                        onChange={(e) => setFollowupDate(e.target.value)}\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol lg={4} md={6} sm={12}>\r\n                                                    <CFormInput\r\n                                                        className=\"mb-1\"\r\n                                                        label=\"FollowUp Time\"\r\n                                                        type=\"time\"\r\n                                                        id=\"exampleFormControlInput1\"\r\n                                                        value={TimeFollowp}\r\n                                                        onChange={(e) => setTimeFollowp(e.target.value)}\r\n\r\n                                                    />\r\n                                                </CCol>\r\n                                            </>\r\n                                        }\r\n                                        {(enquiryStage === 'Prospect' || enquiryStage === 'Appointment' || enquiryStage === 'Trial Session') &&\r\n                                            <CCol lg={12} md={12} sm={12}>\r\n                                                <CFormTextarea\r\n                                                    id=\"exampleFormControlTextarea1\"\r\n                                                    label=\"Discussion\"\r\n                                                    value={Discussion}\r\n                                                    onChange={(e) => setDiscussion(e.target.value)}\r\n                                                    rows=\"2\"\r\n                                                    text=\"Must be 8-20 words long.\"\r\n                                                ></CFormTextarea>\r\n                                            </CCol>\r\n                                        }\r\n                                    </CRow>\r\n                                </CForm>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                                    Close\r\n                                </CButton>\r\n                                <CButton type='submit' color=\"primary\" onClick={() => saveProspect()}>{enquiryStage === 'Join' ? 'Open Admission Form' : 'Save Prospect'}</CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n\r\n                        <CModal size='lg' style={{ border: '2px solid #0B5345' }} visible={visible1} color='' onClose={() => setVisible1(false)} >\r\n                            <CModalHeader  >\r\n                                <CModalTitle>Prospect Form</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <CForm >\r\n                                    <CRow>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"text\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Name\"\r\n                                                value={Name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"Enter Name\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"email\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Email Address\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                                placeholder=\"name@example.com\"\r\n                                                aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                            />\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                type=\"number\"\r\n                                                value={Contact}\r\n                                                onChange={(e) => setContact(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                label=\"Contact No\"\r\n                                                placeholder=\"Enter Number\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={6} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Service Name\"\r\n                                                value={ServiceName1}\r\n                                                onChange={(e) => setServiceName1(e.target.value)}\r\n                                                label=\"Service Name\"\r\n\r\n                                            >\r\n                                                <option>Select Service</option>\r\n                                                {result.map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        item.status === true && (\r\n                                                            <option key={index} value={item.id}>{item.selected_service}</option>\r\n                                                        )\r\n                                                    )\r\n                                                ))}\r\n                                            </CFormSelect>\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Assign Staff\"\r\n                                                value={Counseller}\r\n                                                onChange={(e) => setCounseller(e.target.value)}\r\n                                                label='Counseller'\r\n                                            >\r\n                                                <option>Select Counseller</option>\r\n                                                {staff.filter((list) => list.username === username && list.selected === 'Select').map((item, index) => (\r\n                                                    item.username === username && (\r\n                                                        <option key={index}>{item.FullName}</option>\r\n                                                    )\r\n                                                ))}</CFormSelect>\r\n                                        </CCol>\r\n\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormSelect\r\n                                                className=\"mb-1\"\r\n                                                aria-label=\"Select Call Status\"\r\n                                                value={CallStatus1}\r\n                                                onChange={(e) => setCallStatus1(e.target.value)}\r\n                                                label=\"Call Status\"\r\n                                                options={[\r\n                                                    \"Select\",\r\n                                                    { label: \"Cold\", value: \"Cold\" },\r\n                                                    { label: \"Warm\", value: \"Warm\" },\r\n                                                    { label: \"Hot\", value: \"Hot\" },\r\n                                                ]}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                label=\"FollowUp Date\"\r\n                                                type=\"date\"\r\n                                                value={FollowupDate}\r\n                                                onChange={(e) => setFollowupDate(e.target.value)}\r\n                                                id=\"exampleFormControlInput1\"\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol lg={4} md={6} sm={12}>\r\n                                            <CFormInput\r\n                                                className=\"mb-1\"\r\n                                                label=\"FollowUp Time\"\r\n                                                type=\"time\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                value={TimeFollowp}\r\n                                                onChange={(e) => setTimeFollowp(e.target.value)}\r\n\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol>\r\n                                            <CFormTextarea\r\n                                                id=\"exampleFormControlTextarea1\"\r\n                                                label=\"Discussion\"\r\n                                                value={Discussion}\r\n                                                onChange={(e) => setDiscussion(e.target.value)}\r\n                                                rows=\"2\"\r\n                                                text=\"Must be 8-20 words long.\"\r\n                                            ></CFormTextarea>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                </CForm>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton color=\"secondary\" onClick={() => setVisible1(false)}>\r\n                                    Close\r\n                                </CButton>\r\n                                <CButton type='submit' color=\"primary\" onClick={() => updateProspect()}>Update Prospect</CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Enquiry ID</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Time</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Name</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Email</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Mobile</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Service</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Call Status</CTableHeaderCell>\r\n                                    <CTableHeaderCell>NextFollowup Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Time</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Discussion</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Counseller</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                <CTableRow>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"60px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            disabled\r\n                                            value={Search1}\r\n                                            onChange={(e) => setSearch1(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"90px\" }}\r\n                                            disabled\r\n                                            value={Search2}\r\n                                            onChange={(e) => setSearch2(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            value={Search3}\r\n                                            onChange={(e) => setSearch3(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"120px\" }}\r\n                                            value={Search4}\r\n                                            disabled\r\n                                            onChange={(e) => setSearch4(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            value={Search5}\r\n                                            onChange={(e) => setSearch5(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"80px\" }}\r\n                                            value={Search6}\r\n                                            onChange={(e) => setSearch6(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            value={Search7}\r\n                                            onChange={(e) => setSearch7(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            value={Search8}\r\n                                            onChange={(e) => setSearch8(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                    <CTableDataCell>\r\n                                        <CFormInput\r\n                                            className=\"mb-1\"\r\n                                            type=\"text\"\r\n                                            style={{ minWidth: \"100px\" }}\r\n                                            value={Search9}\r\n                                            onChange={(e) => setSearch9(e.target.value)}\r\n                                            aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                                        />\r\n                                    </CTableDataCell>\r\n                                </CTableRow>\r\n                                {result1.slice(paging * 10, paging * 10 + 10).filter((list) =>\r\n                                    list.username === username && (list.status === 'CallReport' || list.status === 'Appointment')\r\n                                ).map((item, index) => (\r\n                                    <CTableRow key={index}>\r\n                                        <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                        <CTableDataCell>{centerCode}Q{index + 10 + (paging * 10)}</CTableDataCell>\r\n                                        <CTableDataCell className='text-center'>{moment(item.CallDate).format(\"DD-MM-YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell>{moment(item.Time, \"HH:mm\").format(\"hh:mm A\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Name}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Email}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Contact}</CTableDataCell>\r\n                                        <CTableDataCell>{item.ServiceName}</CTableDataCell>\r\n                                        <CTableDataCell>{item.CallStatus}</CTableDataCell>\r\n                                        <CTableDataCell>{item.FollowupDate && moment(item.FollowupDate).format(\"DD-MM-YYYY\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.TimeFollowp && moment(item.TimeFollowp, \"HH:mm\").format(\"hh:mm A\")}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Discussion}</CTableDataCell>\r\n                                        <CTableDataCell>{item.Counseller}</CTableDataCell>\r\n                                    </CTableRow>\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                    <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                        <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </CPaginationItem>\r\n                        <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                        {result1.filter((list) =>\r\n                            list.username === username && list.status === 'CallReport'\r\n                        ).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                        {result1.filter((list) =>\r\n                            list.username === username && list.status === 'CallReport'\r\n                        ).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                        {result1.filter((list) =>\r\n                            list.username === username && list.status === 'CallReport'\r\n                        ).length > (paging + 1) * 10 ?\r\n                            <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                            : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                        }\r\n                    </CPagination>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default FollowupCallReport\r\n"],"names":["url","url2","useState","visible","setVisible","edit","visible1","setVisible1","Search1","setSearch1","Search2","setSearch2","Search3","setSearch3","Search4","setSearch4","Search5","setSearch5","Search6","setSearch6","Search7","setSearch7","Search8","setSearch8","Search9","setSearch9","followForm","callReport","setCallReport","Name","setName","Contact","setContact","email","setEmail","ServiceName1","setServiceName1","CallStatus1","setCallStatus1","enquiryStage","setEnquiryStage","FollowupDate","setFollowupDate","appointmentDate","setappointmentDate","appointmentTime","setappointmentTime","TimeFollowp","setTimeFollowp","Discussion","setDiscussion","Counseller","setCounseller","user","JSON","parse","localStorage","getItem","token","username","centerCode","result","setResult","result1","setResult1","paging","setPaging","pros","setPros","useEffect","getEnquiry","axios","headers","then","res","setStaff","data","console","log","catch","error","warn","filter","list","status","staff","reverse","lg","sm","className","length","style","width","component","htmlFor","type","required","color","fontSize","role","variant","size","border","onClose","md","id","label","value","onChange","e","target","placeholder","map","item","index","selected_service","selected","FullName","options","rows","text","onClick","currentdate","Date","date","getDay","getMonth","getFullYear","time","getHours","getMinutes","EnquiryID","CallDate","Time","Email","ServiceName","CallStatus","fetch","method","body","stringify","resp","json","data1","alert","saveCallReport","appointmentfor","handleAdmission","AppointmentDate","AppointmentTime","found","element","_id","data2","saveProspect","updateProspect","align","bordered","borderColor","hover","responsive","backgroundColor","minWidth","disabled","slice","moment","format","active"],"sourceRoot":""}