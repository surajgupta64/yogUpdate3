{"version":3,"file":"static/js/1075.499fac40.chunk.js","mappings":"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","sources":["views/Master/finance/InvoiceMaster.js"],"sourcesContent":["import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormSwitch,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst InvoiceMaster = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [sub_Service_Name, setSub_Service_Name] = useState(\"\")\r\n    const [selected_service, setSelected_service] = useState(\"\")\r\n    const [fees, setFees] = useState(\"\")\r\n    const [status, setStatus] = useState(false)\r\n    const [packages, setPackages] = useState(\"\")\r\n    const [duration, setDuration] = useState(\"\")\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    useEffect(() => {\r\n        getSubService()\r\n    }, []);\r\n\r\n    function getSubService() {\r\n        axios.get(`${url}/subservice/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setResult1(res.data)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    function deleteSubService(id) {\r\n\r\n        if (confirm('Do you want to delete this')) {\r\n            fetch(`${url}/subservice/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getSubService()\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const updateStatus2 = (id, status) => {\r\n        let item = { status: status }\r\n        fetch(`${url}/subservice/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getSubService()\r\n            })\r\n        })\r\n    }\r\n\r\n    const saveSubservice = () => {\r\n        let data = { username: username, sub_Service_Name, selected_service: selected_service, fees, packages, duration, status }\r\n        // console.warn(data);\r\n        fetch(`${url}/subservice/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            // console.warn(\"resp\",resp);;\r\n            resp.json().then(() => {\r\n                setSelected_service('')\r\n                setFees(\"\")\r\n                setDuration('')\r\n                setStatus(false)\r\n                getSubService()\r\n                alert(\"successfully submitted\")\r\n            })\r\n        })\r\n    }\r\n\r\n    const subserviceClose = () => {\r\n        setAction1(!action1)\r\n        setSelected_service('')\r\n        setSub_Service_Name('')\r\n        setFees(\"\")\r\n        setDuration('')\r\n        setStatus(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Expenses Category Master</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm className=\"mb-2\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div></div>\r\n                        <div>\r\n                            <CRow>\r\n                                <CCol>\r\n                                    <CButton className=\"ms-1 mt-2\" onClick={subserviceClose}>{action1 ? 'close' : 'Add Express'}</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    </div>\r\n                    {action1 &&\r\n                        <div>\r\n                            <CRow className='mt-3'>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Category\"\r\n                                        value={selected_service}\r\n                                        onChange={(e) => setSelected_service(e.target.value)}\r\n                                        placeholder=\"Enter Tax Name\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol lg={6} md={6} sm={12}>\r\n                                    <CFormInput\r\n                                        className=\"mb-1\"\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        label=\"Approval level\"\r\n                                        value={sub_Service_Name}\r\n                                        onChange={(e) => setSub_Service_Name(e.target.value)}\r\n                                        placeholder=\"Enter Tax in %\"\r\n                                    />\r\n                                </CCol>\r\n                                <CCol className=\"mt-2\" lg={6} md={6} sm={12}>\r\n                                    <CRow>\r\n                                        <CCol>\r\n                                            <CFormSwitch size=\"xl\" label=\"Status\" value={status} onChange={() => setStatus(!status)} style={{ defaultChecked: 'false' }} />\r\n                                        </CCol>\r\n                                    </CRow>\r\n\r\n                                    <CButton className=\"mt-2\" onClick={saveSubservice}>Save</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </div>\r\n                    }\r\n                </CForm>\r\n                <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                    <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                        <CTableRow >\r\n                            <CTableHeaderCell>Sr.No</CTableHeaderCell>\r\n                            <CTableHeaderCell>Date</CTableHeaderCell>\r\n                            <CTableHeaderCell>Tax Name</CTableHeaderCell>\r\n                            <CTableHeaderCell>Tax %</CTableHeaderCell>\r\n                            <CTableHeaderCell>Status</CTableHeaderCell>\r\n                            <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                        {result1.map((item, index) => (\r\n                            item.username === username && (\r\n                                <CTableRow key={index}>\r\n                                    <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                    <CTableDataCell>{item.selected_service}</CTableDataCell>\r\n                                    <CTableDataCell className=\"text-center\">{item.sub_Service_Name ? item.sub_Service_Name : '-'}</CTableDataCell>\r\n                                    <CTableDataCell>{item.packages}</CTableDataCell>\r\n                                    <CTableDataCell><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.status} checked={item.status} onChange={() => updateStatus2(item._id, !item.status)} /></CTableDataCell>\r\n                                    <CTableDataCell> <MdDelete style={{ cursor: 'pointer', markerStart: '10px' }} onClick={() => deleteSubService(item._id)} size='20px' /> </CTableDataCell>\r\n                                </CTableRow>\r\n                            )\r\n                        ))}\r\n                    </CTableBody>\r\n                </CTable>\r\n            </CCardBody>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default InvoiceMaster;"],"names":["url","useState","action1","setAction1","sub_Service_Name","setSub_Service_Name","selected_service","setSelected_service","fees","setFees","status","setStatus","packages","duration","setDuration","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","getSubService","axios","headers","then","res","data","catch","error","console","useEffect","className","style","backgroundColor","color","onClick","lg","md","sm","type","id","label","value","onChange","e","target","placeholder","size","defaultChecked","fetch","method","body","stringify","resp","json","alert","align","bordered","borderColor","hover","responsive","map","item","index","cursor","_id","checked","result","updateStatus2","markerStart","confirm","warn"],"sourceRoot":""}