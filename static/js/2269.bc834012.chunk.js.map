{"version":3,"file":"static/js/2269.bc834012.chunk.js","mappings":"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","sources":["views/hr/HolidaysList.js"],"sourcesContent":["import { cilArrowCircleTop } from \"@coreui/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CFormInput,\r\n    CFormSelect,\r\n    CFormSwitch,\r\n    CPagination,\r\n    CPaginationItem,\r\n    CRow,\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst HolidaysList = () => {\r\n    const [action1, setAction1] = useState(false)\r\n    const [date, setDate] = useState('')\r\n    const [holiday, setHoliday] = useState('')\r\n    const [status, setStatus] = useState(false)\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    const [result1, setResult1] = useState([]);\r\n    const [paging, setPaging] = useState(0);\r\n    const headers = {\r\n        'Authorization': `Bearer ${token}`,\r\n        'My-Custom-Header': 'foobar'\r\n    };\r\n    useEffect(() => {\r\n        getHolidayList()\r\n    }, []);\r\n\r\n    function getHolidayList() {\r\n        axios.get(`${url}/holidaysListMaster/all`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setResult1(res.data.reverse())\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    function createHoliday() {\r\n        if (holiday != '' && date != '') {\r\n            const data = {\r\n                username: username,\r\n                Date: date,\r\n                Holiday: holiday,\r\n                Status: status,\r\n            }\r\n            axios.post(`${url}/holidaysListMaster/create`, data, { headers })\r\n                .then((resp) => {\r\n                    console.log(resp.data)\r\n                    alert('Successfully Added')\r\n                    getHolidayList()\r\n                    setAction1(false)\r\n                    setDate('')\r\n                    setHoliday('')\r\n                    setStatus(false)\r\n                })\r\n                .catch((error) => console.log(error))\r\n        } else {\r\n            alert('enter lead Source')\r\n        }\r\n    }\r\n\r\n    const updateStatus = (id, status) => {\r\n        let item = { Status: status }\r\n        fetch(`${url}/holidaysListMaster/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                getHolidayList()\r\n            })\r\n        })\r\n    }\r\n\r\n    function deleteData(id) {\r\n        if (confirm('You want to delete this')) {\r\n            fetch(`${url}/holidaysListMaster/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((result) => {\r\n                result.json().then((resp) => {\r\n                    console.warn(resp)\r\n                    getHolidayList()\r\n                })\r\n            })\r\n        }\r\n        return\r\n    }\r\n\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol lg={12} sm={12}>\r\n                <CCard className=\"mb-3 border-success\">\r\n                    <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                        <CCardTitle className=\"mt-2\">Holiday List Master</CCardTitle>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CTable className='mt-3' align=\"middle\" bordered style={{ borderColor: \"#0B5345\" }} hover responsive>\r\n                            <CTableHead style={{ backgroundColor: \"#0B5345\", color: \"white\" }} >\r\n                                <CTableRow >\r\n                                    <CTableHeaderCell>Sno.</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Date</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Enter Holiday</CTableHeaderCell>\r\n                                    <CTableHeaderCell>Status</CTableHeaderCell>\r\n                                </CTableRow>\r\n                            </CTableHead>\r\n                            <CTableBody>\r\n                                {result1.slice(paging * 10, paging * 10 + 10).filter((list) => list.username === username).map((item, index) => (\r\n                                    item.username === username && (\r\n                                        <CTableRow key={index}>\r\n                                            <CTableDataCell>{index + 1 + (paging * 10)}</CTableDataCell>\r\n                                            <CTableDataCell>{moment(item.Date).format(\"MM-DD-YYYY\")}</CTableDataCell>\r\n                                            <CTableDataCell>{item.Holiday}</CTableDataCell>\r\n                                            <CTableDataCell className=\"text-center\"><CFormSwitch size=\"xl\" style={{ cursor: 'pointer' }} id={item._id} value={item.Status} checked={item.Status} onChange={() => updateStatus(item._id, !item.Status)} /></CTableDataCell>\r\n                                        </CTableRow>\r\n                                    )\r\n                                ))}\r\n                            </CTableBody>\r\n                        </CTable>\r\n                    </CCardBody>\r\n                    <CPagination aria-label=\"Page navigation example\" align=\"center\" className='mt-2'>\r\n                        <CPaginationItem aria-label=\"Previous\" disabled={paging != 0 ? false : true} onClick={() => paging > 0 && setPaging(paging - 1)}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </CPaginationItem>\r\n                        <CPaginationItem active onClick={() => setPaging(0)}>{paging + 1}</CPaginationItem>\r\n                        {result1.filter((list) => list.username === username).length > (paging + 1) * 10 && <CPaginationItem onClick={() => setPaging(paging + 1)} >{paging + 2}</CPaginationItem>}\r\n\r\n                        {result1.filter((list) => list.username === username).length > (paging + 2) * 10 && <CPaginationItem onClick={() => setPaging(paging + 2)}>{paging + 3}</CPaginationItem>}\r\n                        {result1.filter((list) => list.username === username).length > (paging + 1) * 10 ?\r\n                            <CPaginationItem aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                            : <CPaginationItem disabled aria-label=\"Next\" onClick={() => setPaging(paging + 1)}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </CPaginationItem>\r\n                        }\r\n                    </CPagination>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default HolidaysList\r\n"],"names":["url","useState","user","JSON","parse","localStorage","getItem","token","username","result1","setResult1","paging","setPaging","getHolidayList","axios","headers","then","res","console","log","data","reverse","catch","error","useEffect","lg","sm","className","style","backgroundColor","color","align","bordered","borderColor","hover","responsive","slice","filter","list","map","item","index","moment","Date","format","Holiday","size","cursor","id","_id","value","Status","checked","onChange","status","fetch","method","body","stringify","result","json","resp","updateStatus","disabled","onClick","active","length"],"sourceRoot":""}