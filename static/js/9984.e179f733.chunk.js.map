{"version":3,"file":"static/js/9984.e179f733.chunk.js","mappings":"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","sources":["firebase.js","views/Master/centerSetup/LogoSetup.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDJvzaEbE1dAg22tfnpdk0TnO92m8I1kug\",\r\n    authDomain: \"uploadingfile-cb68e.firebaseapp.com\",\r\n    projectId: \"uploadingfile-cb68e\",\r\n    storageBucket: \"uploadingfile-cb68e.appspot.com\",\r\n    messagingSenderId: \"877657240307\",\r\n    appId: \"1:877657240307:web:1dfc6f15a2bc1ccaccbd86\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app)","import {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CImage,\r\n    CInputGroup,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport { listAll, ref, uploadBytes } from \"firebase/storage\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProfileIcon from 'src/assets/images/avatars/profile_icon.png'\r\nimport { storage } from \"src/firebase\";\r\nimport { v4 } from \"uuid\";\r\nconst url = 'https://yog-seven.vercel.app'\r\nconst url2 = 'https://yog-seven.vercel.app'\r\n\r\nconst LogoSetup = () => {\r\n    const [image, setImage] = useState()\r\n    const [imageUrl, setImageUrl] = useState()\r\n    const navigate = useNavigate()\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n    console.log(user);\r\n    const token = user.token;\r\n    const username = user.user.username;\r\n    console.log(username);\r\n    const [result, setResult] = useState(null);\r\n    const [imageList, setImageList] = useState(null);\r\n    useEffect(() => {\r\n        fetch(`${url}/brandlogoupdate/all`, {\r\n            method: \"get\",\r\n            headers: { \"Authorization\": `Bearer ${token}` }\r\n        }).then(res => res.json()).then(json => setResult(json));\r\n\r\n        getImage()\r\n        console.log(result);\r\n    }, []);\r\n\r\n    function getImage() {\r\n        listAll(imagesListRef).then((response) => {\r\n            setImageList(response);\r\n        })\r\n    }\r\n\r\n    const saveLogo = () => {\r\n        let data = { username, logoImage: imageUrl }\r\n        // console.warn(data);\r\n        fetch(`${url}/brandlogoupdate/create`, {\r\n            method: \"POST\",\r\n            headers: { \"Authorization\": `Bearer ${token}` },\r\n            body: JSON.stringify(data)\r\n        }).then((resp) => {\r\n            // console.warn(\"resp\",resp);;\r\n            resp.json().then(() => {\r\n                console.log(imageUrl);\r\n                alert(\"successfully submitted\")\r\n                navigate('/master/center-setup')\r\n            })\r\n        })\r\n    }\r\n\r\n    const imgRef = useRef(null)\r\n    const handleImage = (e) => {\r\n        setImage(e.target.files[0])\r\n        const file = e.target.files[0]\r\n        if (!file.type.startsWith('image/')) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            imgRef.current.src = e.target.result\r\n        }\r\n        reader.readAsDataURL(file)\r\n        console.log(file, image);\r\n    }\r\n\r\n    const imagesListRef = ref(storage, \"logo/\");\r\n    const UploadImage = () => {\r\n        if (image == null) return;\r\n        const imageRef = ref(storage, `logo/${image.name + v4()}`)\r\n        console.log(imageRef.fullPath);\r\n        setImageUrl(imageRef.fullPath)\r\n\r\n        uploadBytes(imageRef, image).then(() => {\r\n            alert('image uploaded')\r\n        })\r\n    }\r\n    console.log(imageUrl);\r\n    return (\r\n        <CCard className=\"mb-3 border-success\">\r\n            <CCardHeader style={{ backgroundColor: '#0B5345', color: 'white' }}>\r\n                <CCardTitle>Logo Setup</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CForm>\r\n                    <CRow>\r\n                        <CCol lg={2} md={3} className='mt-2 mb-1' >\r\n                            <CImage ref={imgRef} className=\"mb-1\" style={{ borderRadius: \"50px\" }} width={'160px'} src={ProfileIcon} />\r\n                        </CCol>\r\n                        <CCol lg={6} md={6} className='mt-4'>\r\n                            <CRow>\r\n                                <CCol lg={12} md={6}>\r\n                                    <CInputGroup className=\"mb-2\">\r\n                                        <CFormInput\r\n                                            className=\" mr-3\"\r\n                                            type=\"file\"\r\n                                            onChange={handleImage}\r\n                                            accept=\"image/*\"\r\n                                        />\r\n                                    </CInputGroup>\r\n                                </CCol>\r\n                                <CCol lg={6} md={6}>\r\n                                    <CButton onClick={UploadImage}>Upload Image</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <CButton className=\"mt-2\" onClick={saveLogo}>Save</CButton>\r\n                    <CButton className=\"mt-2 ms-2\" onClick={() => navigate('/master/center-setup')} >Cancel</CButton>\r\n                </CForm>\r\n            </CCardBody>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default LogoSetup;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","url","useState","image","setImage","imageUrl","setImageUrl","navigate","useNavigate","user","JSON","parse","localStorage","getItem","console","log","token","username","result","setResult","setImageList","useEffect","fetch","method","headers","then","res","json","listAll","imagesListRef","response","imgRef","useRef","ref","className","style","backgroundColor","color","lg","md","borderRadius","width","src","ProfileIcon","type","onChange","e","target","files","file","startsWith","reader","FileReader","onload","current","readAsDataURL","accept","onClick","imageRef","name","v4","fullPath","uploadBytes","alert","data","logoImage","body","stringify","resp","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}